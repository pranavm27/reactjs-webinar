{"ast":null,"code":"var _jsxFileName = \"/home/pranav/sn-agencies/material-sense/src/components/UserDetails.js\";\nimport React, { Component } from \"react\";\nimport withStyles from \"@material-ui/styles/withStyles\";\nimport { withRouter } from \"react-router-dom\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport Back from \"./common/Back\";\n\nconst qs = require(\"query-string\");\n\nconst backgroundShape = require(\"../images/shape.svg\");\n\nconst numeral = require(\"numeral\");\n\nnumeral.defaultFormat(\"0,000\");\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.primary[\"A100\"],\n    overflow: \"hidden\",\n    background: \"url(\".concat(backgroundShape, \") no-repeat\"),\n    backgroundSize: \"cover\",\n    backgroundPosition: \"0 400px\",\n    marginTop: 10,\n    padding: 20,\n    paddingBottom: 200\n  },\n  grid: {\n    margin: \"0 \".concat(theme.spacing(2), \"px\")\n  },\n  smallContainer: {\n    width: \"60%\"\n  },\n  bigContainer: {\n    width: \"80%\"\n  },\n  stepContainer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  stepGrid: {\n    width: \"80%\"\n  },\n  backButton: {\n    marginRight: theme.spacing(1)\n  },\n  outlinedButtom: {\n    textTransform: \"uppercase\",\n    margin: theme.spacing(1)\n  },\n  stepper: {\n    backgroundColor: \"transparent\"\n  },\n  paper: {\n    padding: theme.spacing(3),\n    textAlign: \"left\",\n    color: theme.palette.text.secondary\n  },\n  topInfo: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    marginBottom: 42\n  },\n  formControl: {\n    width: \"100%\"\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  },\n  borderColumn: {\n    borderBottom: \"1px solid \".concat(theme.palette.grey[\"100\"]),\n    paddingBottom: 24,\n    marginBottom: 24\n  },\n  flexBar: {\n    marginTop: 32,\n    display: \"flex\",\n    justifyContent: \"center\"\n  }\n});\n\nconst getSteps = () => {\n  return [\"Info\", \"Bank\", \"Loan details\", \"Terms\", \"Confirm\", \"Done\"];\n};\n\nclass UserDetails extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      activeStep: 0,\n      receivingAccount: \"Home Account\",\n      repaimentAccount: \"Saving Account\",\n      termsChecked: false,\n      labelWidth: 0\n    };\n\n    this.goToDashboard = event => {\n      const queryString = this.props.location.search;\n      this.props.history.push({\n        pathname: \"/\",\n        search: queryString\n      });\n    };\n  }\n\n  componentDidMount() {}\n\n  render() {\n    const classes = this.props.classes;\n    const queryString = this.props.location.search;\n    const parsed = queryString ? qs.parse(queryString) : {};\n    const steps = getSteps();\n    const activeStep = this.state.activeStep;\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CssBaseline, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      spacing: 10,\n      alignItems: \"center\",\n      justify: \"center\",\n      container: true,\n      className: classes.grid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Back, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.stepContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.bigContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Stepper, {\n      classes: {\n        root: classes.stepper\n      },\n      activeStep: activeStep,\n      alternativeLabel: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 41\n      }\n    }, steps.map(label => {\n      return /*#__PURE__*/React.createElement(Step, {\n        key: label,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(StepLabel, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 57\n        }\n      }, label));\n    }))), activeStep === 0 && /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.bigContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      className: classes.paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.topInfo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"subtitle1\",\n      style: {\n        fontWeight: \"bold\"\n      },\n      gutterBottom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 57\n      }\n    }, \"Information\"), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body1\",\n      gutterBottom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 57\n      }\n    }, \"General information about the service\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"outlined\",\n      size: \"large\",\n      className: classes.outlinedButtom,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 57\n      }\n    }, \"Edit\"))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      container: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      style: {\n        textTransform: \"uppercase\"\n      },\n      color: \"secondary\",\n      gutterBottom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 57\n      }\n    }, \"User\"), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 57\n      }\n    }, \"John Doe\")), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      style: {\n        textTransform: \"uppercase\"\n      },\n      color: \"secondary\",\n      gutterBottom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 57\n      }\n    }, \"City\"), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 57\n      }\n    }, \"Tokyo\"))))), activeStep === 1 && /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.smallContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      className: classes.paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginBottom: 32\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"subtitle1\",\n      style: {\n        fontWeight: \"bold\"\n      },\n      gutterBottom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 57\n      }\n    }, \"Bank information\"), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body1\",\n      gutterBottom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 57\n      }\n    }, \"Select account to receive the money\")), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginBottom: 32\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      style: {\n        textTransform: \"uppercase\"\n      },\n      color: \"secondary\",\n      gutterBottom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 57\n      }\n    }, \"Bank\"), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 57\n      }\n    }, \"N26\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      style: {\n        textTransform: \"uppercase\",\n        marginBottom: 20\n      },\n      color: \"secondary\",\n      gutterBottom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 57\n      }\n    }, \"Receiving account\"), /*#__PURE__*/React.createElement(FormControl, {\n      variant: \"outlined\",\n      className: classes.formControl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      value: this.state.receivingAccount,\n      onChange: this.handleChange,\n      input: /*#__PURE__*/React.createElement(OutlinedInput, {\n        labelWidth: this.state.labelWidth,\n        name: \"receivingAccount\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 69\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(MenuItem, {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(\"em\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 69\n      }\n    })), /*#__PURE__*/React.createElement(MenuItem, {\n      value: \"0297 00988200918\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 65\n      }\n    }, \"First account\"), /*#__PURE__*/React.createElement(MenuItem, {\n      value: \"0235 00235233332\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 65\n      }\n    }, \"Second account\"), /*#__PURE__*/React.createElement(MenuItem, {\n      value: \"1256 00864222212\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 65\n      }\n    }, \"Third account\"))))))), activeStep === 2 && /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.bigContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      className: classes.paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.topInfo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"subtitle1\",\n      style: {\n        fontWeight: \"bold\"\n      },\n      gutterBottom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 57\n      }\n    }, \"Details\"), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body1\",\n      gutterBottom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 57\n      }\n    }, \"We need some details about any information\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"outlined\",\n      size: \"large\",\n      className: classes.outlinedButtom,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 57\n      }\n    }, \"Edit\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.borderColumn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      container: true,\n      xs: 12,\n      style: {\n        marginBottom: 32\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      style: {\n        textTransform: \"uppercase\"\n      },\n      color: \"secondary\",\n      gutterBottom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 61\n      }\n    }, \"Amount\"), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 61\n      }\n    }, parsed ? numeral(parsed.amount).format() : \"75,000\", \" \", \"DKK\")), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      style: {\n        textTransform: \"uppercase\"\n      },\n      color: \"secondary\",\n      gutterBottom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 61\n      }\n    }, \"Total fees\"), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 61\n      }\n    }, \"0 DKK\"))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      container: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      style: {\n        textTransform: \"uppercase\"\n      },\n      color: \"secondary\",\n      gutterBottom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 61\n      }\n    }, \"Total price\"), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 61\n      }\n    }, parsed ? numeral(parsed.interest).format() : \"6,600\", \" \", \"USD\")), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      style: {\n        textTransform: \"uppercase\"\n      },\n      color: \"secondary\",\n      gutterBottom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 61\n      }\n    }, \"Total cost\"), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 61\n      }\n    }, parsed ? numeral(parsed.cost).format() : \"81,600\", \" \", \"USD\")))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      container: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      container: true,\n      xs: 12,\n      style: {\n        marginBottom: 32\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      style: {\n        textTransform: \"uppercase\"\n      },\n      color: \"secondary\",\n      gutterBottom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 61\n      }\n    }, \"How often\"), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 61\n      }\n    }, \"Once a month\"))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      style: {\n        textTransform: \"uppercase\"\n      },\n      color: \"secondary\",\n      gutterBottom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 57\n      }\n    }, \"When to start\"), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 57\n      }\n    }, \"01 February 2019\")), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      style: {\n        textTransform: \"uppercase\"\n      },\n      color: \"secondary\",\n      gutterBottom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 57\n      }\n    }, \"When it ends?\"), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 57\n      }\n    }, \"01 May 2019\"))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      container: true,\n      xs: 12,\n      style: {\n        marginTop: 24\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      style: {\n        textTransform: \"uppercase\",\n        marginBottom: 20\n      },\n      color: \"secondary\",\n      gutterBottom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 57\n      }\n    }, \"Destination account\"), /*#__PURE__*/React.createElement(FormControl, {\n      variant: \"outlined\",\n      className: classes.formControl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      value: this.state.repaimentAccount,\n      onChange: this.handleChange,\n      input: /*#__PURE__*/React.createElement(OutlinedInput, {\n        labelWidth: this.state.labelWidth,\n        name: \"repaimentAccount\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 69\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(MenuItem, {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(\"em\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 69\n      }\n    })), /*#__PURE__*/React.createElement(MenuItem, {\n      value: \"0297 00988200918\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 65\n      }\n    }, \"Account one\"), /*#__PURE__*/React.createElement(MenuItem, {\n      value: \"0235 00235233332\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 65\n      }\n    }, \"Account two\"), /*#__PURE__*/React.createElement(MenuItem, {\n      value: \"1256 00864222212\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 65\n      }\n    }, \"Other account\"))))))), activeStep === 3 && /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.bigContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      className: classes.paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginBottom: 24\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"subtitle1\",\n      style: {\n        fontWeight: \"bold\"\n      },\n      gutterBottom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 53\n      }\n    }, \"Terms & Conditions\"), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body1\",\n      gutterBottom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 53\n      }\n    }, \"Please read through and accept the terms & conditions\")), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: 330,\n        padding: 16,\n        border: \"2px solid #ccc\",\n        borderRadius: \"3px\",\n        overflowY: \"scroll\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"subtitle1\",\n      style: {\n        fontWeight: \"bold\"\n      },\n      gutterBottom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 53\n      }\n    }, \"1. Your agreement\"), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body1\",\n      gutterBottom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 499,\n        columnNumber: 53\n      }\n    }, \"By using this Site, you agree to be bound by, and to comply with, these Terms and Conditions. If you do not agree to these Terms and Conditions, please do not use this site. PLEASE NOTE: We reserve the right, at our sole discretion, to change, modify or otherwise alter these Terms and Conditions at any time. Unless otherwise indicated, amendments will become effective immediately. Please review these Terms and Conditions periodically. Your continued use of the Site following the posting of changes and/or modifications will constitute your acceptance of the revised Terms and Conditions and the reasonableness of these standards for notice of changes. For your information, this page was last updated as of the date at the top of these terms and conditions.\"), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"subtitle1\",\n      style: {\n        fontWeight: \"bold\"\n      },\n      gutterBottom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 53\n      }\n    }, \"2. Privacy\"), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body1\",\n      gutterBottom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 524,\n        columnNumber: 53\n      }\n    }, \"Please review our Privacy Policy, which also governs your visit to this Site, to understand our practices. By using this Site, you agree to be bound by, and to comply with, these Terms and Conditions. If you do not agree to these Terms and Conditions, please do not use this site. PLEASE NOTE: We reserve the right, at our sole discretion, to change, modify or otherwise alter these Terms and Conditions at any time. Unless otherwise indicated, amendments will become effective immediately. Please review these Terms and Conditions periodically. Your continued use of the Site following the posting of changes and/or modifications will constitute your acceptance of the revised Terms and Conditions and the reasonableness of these standards for notice of changes. For your information, this page was last updated as of the date at the top of these terms and conditions.\")), /*#__PURE__*/React.createElement(FormGroup, {\n      row: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 545,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(FormControlLabel, {\n      control: /*#__PURE__*/React.createElement(Checkbox, {\n        checked: this.state.termsChecked,\n        onChange: this.handleTerms,\n        value: \"check\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 548,\n          columnNumber: 61\n        }\n      }),\n      label: \"I have read and understood the terms & conditions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 546,\n        columnNumber: 53\n      }\n    })))), activeStep === 4 && /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.smallContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 561,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      className: classes.paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 562,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      container: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 563,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 564,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"subtitle1\",\n      style: {\n        fontWeight: \"bold\"\n      },\n      gutterBottom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 565,\n        columnNumber: 57\n      }\n    }, \"Sign & confirm\"), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body1\",\n      gutterBottom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 572,\n        columnNumber: 57\n      }\n    }, \"Sign and confirm your agreement\"))))), (activeStep === 5 || activeStep === 6) && /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.smallContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 581,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      className: classes.paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 582,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      container: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 583,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 584,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"subtitle1\",\n      gutterBottom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 585,\n        columnNumber: 57\n      }\n    }, \"Congratulations\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n      role: \"img\",\n      \"aria-label\": \"conrats emoji\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 587,\n        columnNumber: 61\n      }\n    }, \"\\uD83C\\uDF89\")), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body1\",\n      gutterBottom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 591,\n        columnNumber: 57\n      }\n    }, \"We have now a positive response\"), /*#__PURE__*/React.createElement(Button, {\n      fullWidth: true,\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 594,\n        columnNumber: 57\n      }\n    }, \"Download the service invoice or whatever\"))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.flexBar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 602,\n        columnNumber: 37\n      }\n    }, activeStep !== 5 && /*#__PURE__*/React.createElement(Button, {\n      disabled: activeStep === 0,\n      onClick: this.handleBack,\n      className: classes.backButton,\n      size: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 604,\n        columnNumber: 45\n      }\n    }, \"Back\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: activeStep !== 5 ? this.handleNext : this.goToDashboard,\n      size: \"large\",\n      disabled: this.state.activeStep === 3 && !this.state.termsChecked,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 613,\n        columnNumber: 41\n      }\n    }, this.stepActions()))))))));\n  }\n\n}\n\nexport default withRouter(withStyles(styles)(UserDetails));","map":{"version":3,"sources":["/home/pranav/sn-agencies/material-sense/src/components/UserDetails.js"],"names":["React","Component","withStyles","withRouter","CssBaseline","Typography","Grid","Paper","Button","Stepper","Step","StepLabel","OutlinedInput","FormGroup","FormControlLabel","Checkbox","MenuItem","FormControl","Select","Back","qs","require","backgroundShape","numeral","defaultFormat","styles","theme","root","flexGrow","backgroundColor","palette","primary","overflow","background","backgroundSize","backgroundPosition","marginTop","padding","paddingBottom","grid","margin","spacing","smallContainer","width","bigContainer","stepContainer","display","flexDirection","alignItems","stepGrid","backButton","marginRight","outlinedButtom","textTransform","stepper","paper","textAlign","color","text","secondary","topInfo","justifyContent","marginBottom","formControl","selectEmpty","borderColumn","borderBottom","grey","flexBar","getSteps","UserDetails","state","activeStep","receivingAccount","repaimentAccount","termsChecked","labelWidth","goToDashboard","event","queryString","props","location","search","history","push","pathname","componentDidMount","render","classes","parsed","parse","steps","map","label","fontWeight","handleChange","amount","format","interest","cost","height","border","borderRadius","overflowY","handleTerms","handleBack","handleNext","stepActions"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,gCAAvB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,IAAP,MAAiB,eAAjB;;AAEA,MAAMC,EAAE,GAAGC,OAAO,CAAC,cAAD,CAAlB;;AACA,MAAMC,eAAe,GAAGD,OAAO,CAAC,qBAAD,CAA/B;;AAEA,MAAME,OAAO,GAAGF,OAAO,CAAC,SAAD,CAAvB;;AACAE,OAAO,CAACC,aAAR,CAAsB,OAAtB;;AAEA,MAAMC,MAAM,GAAGC,KAAK,KAAK;AACrBC,EAAAA,IAAI,EAAE;AACFC,IAAAA,QAAQ,EAAE,CADR;AAEFC,IAAAA,eAAe,EAAEH,KAAK,CAACI,OAAN,CAAcC,OAAd,CAAsB,MAAtB,CAFf;AAGFC,IAAAA,QAAQ,EAAE,QAHR;AAIFC,IAAAA,UAAU,gBAASX,eAAT,gBAJR;AAKFY,IAAAA,cAAc,EAAE,OALd;AAMFC,IAAAA,kBAAkB,EAAE,SANlB;AAOFC,IAAAA,SAAS,EAAE,EAPT;AAQFC,IAAAA,OAAO,EAAE,EARP;AASFC,IAAAA,aAAa,EAAE;AATb,GADe;AAYrBC,EAAAA,IAAI,EAAE;AACFC,IAAAA,MAAM,cAAOd,KAAK,CAACe,OAAN,CAAc,CAAd,CAAP;AADJ,GAZe;AAerBC,EAAAA,cAAc,EAAE;AACZC,IAAAA,KAAK,EAAE;AADK,GAfK;AAkBrBC,EAAAA,YAAY,EAAE;AACVD,IAAAA,KAAK,EAAE;AADG,GAlBO;AAqBrBE,EAAAA,aAAa,EAAE;AACXC,IAAAA,OAAO,EAAE,MADE;AAEXC,IAAAA,aAAa,EAAE,QAFJ;AAGXC,IAAAA,UAAU,EAAE;AAHD,GArBM;AA0BrBC,EAAAA,QAAQ,EAAE;AACNN,IAAAA,KAAK,EAAE;AADD,GA1BW;AA6BrBO,EAAAA,UAAU,EAAE;AACRC,IAAAA,WAAW,EAAEzB,KAAK,CAACe,OAAN,CAAc,CAAd;AADL,GA7BS;AAgCrBW,EAAAA,cAAc,EAAE;AACZC,IAAAA,aAAa,EAAE,WADH;AAEZb,IAAAA,MAAM,EAAEd,KAAK,CAACe,OAAN,CAAc,CAAd;AAFI,GAhCK;AAoCrBa,EAAAA,OAAO,EAAE;AACLzB,IAAAA,eAAe,EAAE;AADZ,GApCY;AAuCrB0B,EAAAA,KAAK,EAAE;AACHlB,IAAAA,OAAO,EAAEX,KAAK,CAACe,OAAN,CAAc,CAAd,CADN;AAEHe,IAAAA,SAAS,EAAE,MAFR;AAGHC,IAAAA,KAAK,EAAE/B,KAAK,CAACI,OAAN,CAAc4B,IAAd,CAAmBC;AAHvB,GAvCc;AA4CrBC,EAAAA,OAAO,EAAE;AACLd,IAAAA,OAAO,EAAE,MADJ;AAELe,IAAAA,cAAc,EAAE,eAFX;AAGLb,IAAAA,UAAU,EAAE,QAHP;AAILc,IAAAA,YAAY,EAAE;AAJT,GA5CY;AAkDrBC,EAAAA,WAAW,EAAE;AACTpB,IAAAA,KAAK,EAAE;AADE,GAlDQ;AAqDrBqB,EAAAA,WAAW,EAAE;AACT5B,IAAAA,SAAS,EAAEV,KAAK,CAACe,OAAN,CAAc,CAAd;AADF,GArDQ;AAwDrBwB,EAAAA,YAAY,EAAE;AACVC,IAAAA,YAAY,sBAAexC,KAAK,CAACI,OAAN,CAAcqC,IAAd,CAAmB,KAAnB,CAAf,CADF;AAEV7B,IAAAA,aAAa,EAAE,EAFL;AAGVwB,IAAAA,YAAY,EAAE;AAHJ,GAxDO;AA6DrBM,EAAAA,OAAO,EAAE;AACLhC,IAAAA,SAAS,EAAE,EADN;AAELU,IAAAA,OAAO,EAAE,MAFJ;AAGLe,IAAAA,cAAc,EAAE;AAHX;AA7DY,CAAL,CAApB;;AAoEA,MAAMQ,QAAQ,GAAG,MAAM;AACnB,SAAO,CAAC,MAAD,EAAS,MAAT,EAAiB,cAAjB,EAAiC,OAAjC,EAA0C,SAA1C,EAAqD,MAArD,CAAP;AACH,CAFD;;AAIA,MAAMC,WAAN,SAA0BrE,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAChCsE,KADgC,GACxB;AACJC,MAAAA,UAAU,EAAE,CADR;AAEJC,MAAAA,gBAAgB,EAAE,cAFd;AAGJC,MAAAA,gBAAgB,EAAE,gBAHd;AAIJC,MAAAA,YAAY,EAAE,KAJV;AAKJC,MAAAA,UAAU,EAAE;AALR,KADwB;;AAAA,SAWhCC,aAXgC,GAWhBC,KAAK,IAAI;AACrB,YAAMC,WAAW,GAAG,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,MAAxC;AAEA,WAAKF,KAAL,CAAWG,OAAX,CAAmBC,IAAnB,CAAwB;AACpBC,QAAAA,QAAQ,EAAE,GADU;AAEpBH,QAAAA,MAAM,EAAEH;AAFY,OAAxB;AAIH,KAlB+B;AAAA;;AAShCO,EAAAA,iBAAiB,GAAG,CAAG;;AAWvBC,EAAAA,MAAM,GAAG;AAAA,UACGC,OADH,GACe,KAAKR,KADpB,CACGQ,OADH;AAEL,UAAMT,WAAW,GAAG,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,MAAxC;AACA,UAAMO,MAAM,GAAGV,WAAW,GAAG3D,EAAE,CAACsE,KAAH,CAASX,WAAT,CAAH,GAA2B,EAArD;AACA,UAAMY,KAAK,GAAGtB,QAAQ,EAAtB;AAJK,UAKGG,UALH,GAKkB,KAAKD,KALvB,CAKGC,UALH;AAOL,wBACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAK,MAAA,SAAS,EAAEgB,OAAO,CAAC7D,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAC,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AACI,MAAA,OAAO,EAAE,EADb;AAEI,MAAA,UAAU,EAAC,QAFf;AAGI,MAAA,OAAO,EAAC,QAHZ;AAII,MAAA,SAAS,MAJb;AAKI,MAAA,SAAS,EAAE6D,OAAO,CAACjD,IALvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAOI,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAK,MAAA,SAAS,EAAEiD,OAAO,CAAC3C,aAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAE2C,OAAO,CAAC5C,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,OAAD;AACI,MAAA,OAAO,EAAE;AAAEjB,QAAAA,IAAI,EAAE6D,OAAO,CAAClC;AAAhB,OADb;AAEI,MAAA,UAAU,EAAEkB,UAFhB;AAGI,MAAA,gBAAgB,MAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKKmB,KAAK,CAACC,GAAN,CAAUC,KAAK,IAAI;AAChB,0BACI,oBAAC,IAAD;AAAM,QAAA,GAAG,EAAEA,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAYA,KAAZ,CADJ,CADJ;AAKH,KANA,CALL,CADJ,CADJ,EAgBKrB,UAAU,KAAK,CAAf,iBACG;AAAK,MAAA,SAAS,EAAEgB,OAAO,CAAC5C,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAE4C,OAAO,CAACjC,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAEiC,OAAO,CAAC5B,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,UAAD;AACI,MAAA,OAAO,EAAC,WADZ;AAEI,MAAA,KAAK,EAAE;AAAEkC,QAAAA,UAAU,EAAE;AAAd,OAFX;AAGI,MAAA,YAAY,MAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,eAQI,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,OAApB;AAA4B,MAAA,YAAY,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CARJ,CADJ,eAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AACI,MAAA,OAAO,EAAC,UADZ;AAEI,MAAA,IAAI,EAAC,OAFT;AAGI,MAAA,SAAS,EAAEN,OAAO,CAACpC,cAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,CAbJ,CADJ,eAwBI,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,SAAS,MAApB;AAAqB,MAAA,EAAE,EAAE,EAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,UAAD;AACI,MAAA,KAAK,EAAE;AAAEC,QAAAA,aAAa,EAAE;AAAjB,OADX;AAEI,MAAA,KAAK,EAAC,WAFV;AAGI,MAAA,YAAY,MAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAQI,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,IAApB;AAAyB,MAAA,YAAY,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBARJ,CADJ,eAaI,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,UAAD;AACI,MAAA,KAAK,EAAE;AAAEA,QAAAA,aAAa,EAAE;AAAjB,OADX;AAEI,MAAA,KAAK,EAAC,WAFV;AAGI,MAAA,YAAY,MAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAQI,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,IAApB;AAAyB,MAAA,YAAY,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eARJ,CAbJ,CAxBJ,CADJ,CAjBR,EAuEKmB,UAAU,KAAK,CAAf,iBACG;AAAK,MAAA,SAAS,EAAEgB,OAAO,CAAC9C,cAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAE8C,OAAO,CAACjC,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,KAAK,EAAE;AAAEO,QAAAA,YAAY,EAAE;AAAhB,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,UAAD;AACI,MAAA,OAAO,EAAC,WADZ;AAEI,MAAA,KAAK,EAAE;AAAEgC,QAAAA,UAAU,EAAE;AAAd,OAFX;AAGI,MAAA,YAAY,MAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAQI,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,OAApB;AAA4B,MAAA,YAAY,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CARJ,CADJ,eAaI;AAAK,MAAA,KAAK,EAAE;AAAEhC,QAAAA,YAAY,EAAE;AAAhB,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,UAAD;AACI,MAAA,KAAK,EAAE;AAAET,QAAAA,aAAa,EAAE;AAAjB,OADX;AAEI,MAAA,KAAK,EAAC,WAFV;AAGI,MAAA,YAAY,MAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAQI,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,IAApB;AAAyB,MAAA,YAAY,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aARJ,CAbJ,eAyBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,UAAD;AACI,MAAA,KAAK,EAAE;AACHA,QAAAA,aAAa,EAAE,WADZ;AAEHS,QAAAA,YAAY,EAAE;AAFX,OADX;AAKI,MAAA,KAAK,EAAC,WALV;AAMI,MAAA,YAAY,MANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,eAWI,oBAAC,WAAD;AACI,MAAA,OAAO,EAAC,UADZ;AAEI,MAAA,SAAS,EAAE0B,OAAO,CAACzB,WAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAII,oBAAC,MAAD;AACI,MAAA,KAAK,EAAE,KAAKQ,KAAL,CAAWE,gBADtB;AAEI,MAAA,QAAQ,EAAE,KAAKsB,YAFnB;AAGI,MAAA,KAAK,eACD,oBAAC,aAAD;AACI,QAAA,UAAU,EAAE,KAAKxB,KAAL,CAAWK,UAD3B;AAEI,QAAA,IAAI,EAAC,kBAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAUI,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAC,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAVJ,eAaI,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAE,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAbJ,eAgBI,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAE,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAhBJ,eAmBI,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAE,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAnBJ,CAJJ,CAXJ,CAzBJ,CADJ,CADJ,CAxER,EA+IKJ,UAAU,KAAK,CAAf,iBACG;AAAK,MAAA,SAAS,EAAEgB,OAAO,CAAC5C,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAE4C,OAAO,CAACjC,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAEiC,OAAO,CAAC5B,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,UAAD;AACI,MAAA,OAAO,EAAC,WADZ;AAEI,MAAA,KAAK,EAAE;AAAEkC,QAAAA,UAAU,EAAE;AAAd,OAFX;AAGI,MAAA,YAAY,MAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,eAQI,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,OAApB;AAA4B,MAAA,YAAY,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDARJ,CADJ,eAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AACI,MAAA,OAAO,EAAC,UADZ;AAEI,MAAA,IAAI,EAAC,OAFT;AAGI,MAAA,SAAS,EAAEN,OAAO,CAACpC,cAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,CAbJ,CADJ,eAwBI;AAAK,MAAA,SAAS,EAAEoC,OAAO,CAACvB,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AACI,MAAA,IAAI,MADR;AAEI,MAAA,SAAS,MAFb;AAGI,MAAA,EAAE,EAAE,EAHR;AAII,MAAA,KAAK,EAAE;AAAEH,QAAAA,YAAY,EAAE;AAAhB,OAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAMI,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,UAAD;AACI,MAAA,KAAK,EAAE;AAAET,QAAAA,aAAa,EAAE;AAAjB,OADX;AAEI,MAAA,KAAK,EAAC,WAFV;AAGI,MAAA,YAAY,MAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAQI,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,IAApB;AAAyB,MAAA,YAAY,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKoC,MAAM,GACDlE,OAAO,CAACkE,MAAM,CAACO,MAAR,CAAP,CAAuBC,MAAvB,EADC,GAED,QAHV,EAGoB,GAHpB,QARJ,CANJ,eAqBI,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,UAAD;AACI,MAAA,KAAK,EAAE;AAAE5C,QAAAA,aAAa,EAAE;AAAjB,OADX;AAEI,MAAA,KAAK,EAAC,WAFV;AAGI,MAAA,YAAY,MAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAQI,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,IAApB;AAAyB,MAAA,YAAY,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eARJ,CArBJ,CADJ,eAmCI,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,SAAS,MAApB;AAAqB,MAAA,EAAE,EAAE,EAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,UAAD;AACI,MAAA,KAAK,EAAE;AAAEA,QAAAA,aAAa,EAAE;AAAjB,OADX;AAEI,MAAA,KAAK,EAAC,WAFV;AAGI,MAAA,YAAY,MAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,eAQI,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,IAApB;AAAyB,MAAA,YAAY,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKoC,MAAM,GACDlE,OAAO,CAACkE,MAAM,CAACS,QAAR,CAAP,CAAyBD,MAAzB,EADC,GAED,OAHV,EAGmB,GAHnB,QARJ,CADJ,eAgBI,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,UAAD;AACI,MAAA,KAAK,EAAE;AAAE5C,QAAAA,aAAa,EAAE;AAAjB,OADX;AAEI,MAAA,KAAK,EAAC,WAFV;AAGI,MAAA,YAAY,MAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAQI,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,IAApB;AAAyB,MAAA,YAAY,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKoC,MAAM,GACDlE,OAAO,CAACkE,MAAM,CAACU,IAAR,CAAP,CAAqBF,MAArB,EADC,GAED,QAHV,EAGoB,GAHpB,QARJ,CAhBJ,CAnCJ,CAxBJ,eA4FI,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,SAAS,MAApB;AAAqB,MAAA,EAAE,EAAE,EAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AACI,MAAA,IAAI,MADR;AAEI,MAAA,SAAS,MAFb;AAGI,MAAA,EAAE,EAAE,EAHR;AAII,MAAA,KAAK,EAAE;AAAEnC,QAAAA,YAAY,EAAE;AAAhB,OAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAMI,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,UAAD;AACI,MAAA,KAAK,EAAE;AAAET,QAAAA,aAAa,EAAE;AAAjB,OADX;AAEI,MAAA,KAAK,EAAC,WAFV;AAGI,MAAA,YAAY,MAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,eAQI,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,IAApB;AAAyB,MAAA,YAAY,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBARJ,CANJ,CADJ,eAoBI,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,UAAD;AACI,MAAA,KAAK,EAAE;AAAEA,QAAAA,aAAa,EAAE;AAAjB,OADX;AAEI,MAAA,KAAK,EAAC,WAFV;AAGI,MAAA,YAAY,MAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,eAQI,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,IAApB;AAAyB,MAAA,YAAY,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BARJ,CApBJ,eAgCI,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,UAAD;AACI,MAAA,KAAK,EAAE;AAAEA,QAAAA,aAAa,EAAE;AAAjB,OADX;AAEI,MAAA,KAAK,EAAC,WAFV;AAGI,MAAA,YAAY,MAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,eAQI,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,IAApB;AAAyB,MAAA,YAAY,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBARJ,CAhCJ,CA5FJ,eAyII,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,SAAS,MAApB;AAAqB,MAAA,EAAE,EAAE,EAAzB;AAA6B,MAAA,KAAK,EAAE;AAAEjB,QAAAA,SAAS,EAAE;AAAb,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,UAAD;AACI,MAAA,KAAK,EAAE;AACHiB,QAAAA,aAAa,EAAE,WADZ;AAEHS,QAAAA,YAAY,EAAE;AAFX,OADX;AAKI,MAAA,KAAK,EAAC,WALV;AAMI,MAAA,YAAY,MANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,eAWI,oBAAC,WAAD;AACI,MAAA,OAAO,EAAC,UADZ;AAEI,MAAA,SAAS,EAAE0B,OAAO,CAACzB,WAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAII,oBAAC,MAAD;AACI,MAAA,KAAK,EAAE,KAAKQ,KAAL,CAAWG,gBADtB;AAEI,MAAA,QAAQ,EAAE,KAAKqB,YAFnB;AAGI,MAAA,KAAK,eACD,oBAAC,aAAD;AACI,QAAA,UAAU,EAAE,KAAKxB,KAAL,CAAWK,UAD3B;AAEI,QAAA,IAAI,EAAC,kBAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAUI,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAC,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAVJ,eAaI,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAE,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAbJ,eAgBI,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAE,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAhBJ,eAmBI,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAE,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAnBJ,CAJJ,CAXJ,CADJ,CAzIJ,CADJ,CAhJR,EAuUKJ,UAAU,KAAK,CAAf,iBACG;AAAK,MAAA,SAAS,EAAEgB,OAAO,CAAC5C,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAE4C,OAAO,CAACjC,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,KAAK,EAAE;AAAEO,QAAAA,YAAY,EAAE;AAAhB,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,UAAD;AACI,MAAA,OAAO,EAAC,WADZ;AAEI,MAAA,KAAK,EAAE;AAAEgC,QAAAA,UAAU,EAAE;AAAd,OAFX;AAGI,MAAA,YAAY,MAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,eAQI,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,OAApB;AAA4B,MAAA,YAAY,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+DARJ,CADJ,eAcI;AACI,MAAA,KAAK,EAAE;AACHM,QAAAA,MAAM,EAAE,GADL;AAEH/D,QAAAA,OAAO,EAAE,EAFN;AAGHgE,QAAAA,MAAM,EAAE,gBAHL;AAIHC,QAAAA,YAAY,EAAE,KAJX;AAKHC,QAAAA,SAAS,EAAE;AALR,OADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBASI,oBAAC,UAAD;AACI,MAAA,OAAO,EAAC,WADZ;AAEI,MAAA,KAAK,EAAE;AAAET,QAAAA,UAAU,EAAE;AAAd,OAFX;AAGI,MAAA,YAAY,MAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BATJ,eAgBI,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,OAApB;AAA4B,MAAA,YAAY,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,owBAhBJ,eAkCI,oBAAC,UAAD;AACI,MAAA,OAAO,EAAC,WADZ;AAEI,MAAA,KAAK,EAAE;AAAEA,QAAAA,UAAU,EAAE;AAAd,OAFX;AAGI,MAAA,YAAY,MAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAlCJ,eAyCI,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,OAApB;AAA4B,MAAA,YAAY,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+2BAzCJ,CAdJ,eA4EI,oBAAC,SAAD;AAAW,MAAA,GAAG,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,gBAAD;AACI,MAAA,OAAO,eACH,oBAAC,QAAD;AACI,QAAA,OAAO,EAAE,KAAKvB,KAAL,CAAWI,YADxB;AAEI,QAAA,QAAQ,EAAE,KAAK6B,WAFnB;AAGI,QAAA,KAAK,EAAC,OAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFR;AAQI,MAAA,KAAK,EAAC,mDARV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CA5EJ,CADJ,CAxUR,EAoaKhC,UAAU,KAAK,CAAf,iBACG;AAAK,MAAA,SAAS,EAAEgB,OAAO,CAAC9C,cAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAE8C,OAAO,CAACjC,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,SAAS,MAApB;AAAqB,MAAA,EAAE,EAAE,EAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,UAAD;AACI,MAAA,OAAO,EAAC,WADZ;AAEI,MAAA,KAAK,EAAE;AAAEuC,QAAAA,UAAU,EAAE;AAAd,OAFX;AAGI,MAAA,YAAY,MAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAQI,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,OAApB;AAA4B,MAAA,YAAY,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCARJ,CADJ,CADJ,CADJ,CAraR,EAwbK,CAACtB,UAAU,KAAK,CAAf,IAAoBA,UAAU,KAAK,CAApC,kBACG;AAAK,MAAA,SAAS,EAAEgB,OAAO,CAAC9C,cAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAE8C,OAAO,CAACjC,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,SAAS,MAApB;AAAqB,MAAA,EAAE,EAAE,EAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,WAApB;AAAgC,MAAA,YAAY,MAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACoB,GADpB,eAEI;AAAM,MAAA,IAAI,EAAC,KAAX;AAAiB,oBAAW,eAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ,CADJ,eAOI,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,OAApB;AAA4B,MAAA,YAAY,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAPJ,eAUI,oBAAC,MAAD;AAAQ,MAAA,SAAS,MAAjB;AAAkB,MAAA,OAAO,EAAC,UAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDAVJ,CADJ,CADJ,CADJ,CAzbR,eA8cI;AAAK,MAAA,SAAS,EAAEiC,OAAO,CAACpB,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKI,UAAU,KAAK,CAAf,iBACG,oBAAC,MAAD;AACI,MAAA,QAAQ,EAAEA,UAAU,KAAK,CAD7B;AAEI,MAAA,OAAO,EAAE,KAAKiC,UAFlB;AAGI,MAAA,SAAS,EAAEjB,OAAO,CAACtC,UAHvB;AAII,MAAA,IAAI,EAAC,OAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFR,eAWI,oBAAC,MAAD;AACI,MAAA,OAAO,EAAC,WADZ;AAEI,MAAA,KAAK,EAAC,SAFV;AAGI,MAAA,OAAO,EACHsB,UAAU,KAAK,CAAf,GAAmB,KAAKkC,UAAxB,GAAqC,KAAK7B,aAJlD;AAMI,MAAA,IAAI,EAAC,OANT;AAOI,MAAA,QAAQ,EACJ,KAAKN,KAAL,CAAWC,UAAX,KAA0B,CAA1B,IAA+B,CAAC,KAAKD,KAAL,CAAWI,YARnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAWK,KAAKgC,WAAL,EAXL,CAXJ,CA9cJ,CAFJ,CAPJ,CADJ,CADJ,CAFJ,CADJ;AA4fH;;AAvhB+B;;AA0hBpC,eAAexG,UAAU,CAACD,UAAU,CAACuB,MAAD,CAAV,CAAmB6C,WAAnB,CAAD,CAAzB","sourcesContent":["import React, { Component } from \"react\";\nimport withStyles from \"@material-ui/styles/withStyles\";\nimport { withRouter } from \"react-router-dom\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport Back from \"./common/Back\";\n\nconst qs = require(\"query-string\");\nconst backgroundShape = require(\"../images/shape.svg\");\n\nconst numeral = require(\"numeral\");\nnumeral.defaultFormat(\"0,000\");\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n        backgroundColor: theme.palette.primary[\"A100\"],\n        overflow: \"hidden\",\n        background: `url(${backgroundShape}) no-repeat`,\n        backgroundSize: \"cover\",\n        backgroundPosition: \"0 400px\",\n        marginTop: 10,\n        padding: 20,\n        paddingBottom: 200\n    },\n    grid: {\n        margin: `0 ${theme.spacing(2)}px`\n    },\n    smallContainer: {\n        width: \"60%\"\n    },\n    bigContainer: {\n        width: \"80%\"\n    },\n    stepContainer: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n    },\n    stepGrid: {\n        width: \"80%\"\n    },\n    backButton: {\n        marginRight: theme.spacing(1)\n    },\n    outlinedButtom: {\n        textTransform: \"uppercase\",\n        margin: theme.spacing(1)\n    },\n    stepper: {\n        backgroundColor: \"transparent\"\n    },\n    paper: {\n        padding: theme.spacing(3),\n        textAlign: \"left\",\n        color: theme.palette.text.secondary\n    },\n    topInfo: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        marginBottom: 42\n    },\n    formControl: {\n        width: \"100%\"\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2)\n    },\n    borderColumn: {\n        borderBottom: `1px solid ${theme.palette.grey[\"100\"]}`,\n        paddingBottom: 24,\n        marginBottom: 24\n    },\n    flexBar: {\n        marginTop: 32,\n        display: \"flex\",\n        justifyContent: \"center\"\n    }\n});\n\nconst getSteps = () => {\n    return [\"Info\", \"Bank\", \"Loan details\", \"Terms\", \"Confirm\", \"Done\"];\n};\n\nclass UserDetails extends Component {\n    state = {\n        activeStep: 0,\n        receivingAccount: \"Home Account\",\n        repaimentAccount: \"Saving Account\",\n        termsChecked: false,\n        labelWidth: 0\n    };\n\n    componentDidMount() { }\n\n    goToDashboard = event => {\n        const queryString = this.props.location.search;\n\n        this.props.history.push({\n            pathname: \"/\",\n            search: queryString\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const queryString = this.props.location.search;\n        const parsed = queryString ? qs.parse(queryString) : {};\n        const steps = getSteps();\n        const { activeStep } = this.state;\n\n        return (\n            <React.Fragment>\n                <CssBaseline />\n                <div className={classes.root}>\n                    <Grid container justify=\"center\">\n                        <Grid\n                            spacing={10}\n                            alignItems=\"center\"\n                            justify=\"center\"\n                            container\n                            className={classes.grid}\n                        >\n                            <Grid item xs={12}>\n                                <Back />\n                                <div className={classes.stepContainer}>\n                                    <div className={classes.bigContainer}>\n                                        <Stepper\n                                            classes={{ root: classes.stepper }}\n                                            activeStep={activeStep}\n                                            alternativeLabel\n                                        >\n                                            {steps.map(label => {\n                                                return (\n                                                    <Step key={label}>\n                                                        <StepLabel>{label}</StepLabel>\n                                                    </Step>\n                                                );\n                                            })}\n                                        </Stepper>\n                                    </div>\n                                    {activeStep === 0 && (\n                                        <div className={classes.bigContainer}>\n                                            <Paper className={classes.paper}>\n                                                <div className={classes.topInfo}>\n                                                    <div>\n                                                        <Typography\n                                                            variant=\"subtitle1\"\n                                                            style={{ fontWeight: \"bold\" }}\n                                                            gutterBottom\n                                                        >\n                                                            Information\n                            </Typography>\n                                                        <Typography variant=\"body1\" gutterBottom>\n                                                            General information about the service\n                            </Typography>\n                                                    </div>\n                                                    <div>\n                                                        <Button\n                                                            variant=\"outlined\"\n                                                            size=\"large\"\n                                                            className={classes.outlinedButtom}\n                                                        >\n                                                            Edit\n                            </Button>\n                                                    </div>\n                                                </div>\n                                                <Grid item container xs={12}>\n                                                    <Grid item xs={6}>\n                                                        <Typography\n                                                            style={{ textTransform: \"uppercase\" }}\n                                                            color=\"secondary\"\n                                                            gutterBottom\n                                                        >\n                                                            User\n                            </Typography>\n                                                        <Typography variant=\"h5\" gutterBottom>\n                                                            John Doe\n                            </Typography>\n                                                    </Grid>\n                                                    <Grid item xs={6}>\n                                                        <Typography\n                                                            style={{ textTransform: \"uppercase\" }}\n                                                            color=\"secondary\"\n                                                            gutterBottom\n                                                        >\n                                                            City\n                            </Typography>\n                                                        <Typography variant=\"h5\" gutterBottom>\n                                                            Tokyo\n                            </Typography>\n                                                    </Grid>\n                                                </Grid>\n                                            </Paper>\n                                        </div>\n                                    )}\n                                    {activeStep === 1 && (\n                                        <div className={classes.smallContainer}>\n                                            <Paper className={classes.paper}>\n                                                <div>\n                                                    <div style={{ marginBottom: 32 }}>\n                                                        <Typography\n                                                            variant=\"subtitle1\"\n                                                            style={{ fontWeight: \"bold\" }}\n                                                            gutterBottom\n                                                        >\n                                                            Bank information\n                            </Typography>\n                                                        <Typography variant=\"body1\" gutterBottom>\n                                                            Select account to receive the money\n                            </Typography>\n                                                    </div>\n                                                    <div style={{ marginBottom: 32 }}>\n                                                        <Typography\n                                                            style={{ textTransform: \"uppercase\" }}\n                                                            color=\"secondary\"\n                                                            gutterBottom\n                                                        >\n                                                            Bank\n                            </Typography>\n                                                        <Typography variant=\"h5\" gutterBottom>\n                                                            N26\n                            </Typography>\n                                                    </div>\n                                                    <div>\n                                                        <Typography\n                                                            style={{\n                                                                textTransform: \"uppercase\",\n                                                                marginBottom: 20\n                                                            }}\n                                                            color=\"secondary\"\n                                                            gutterBottom\n                                                        >\n                                                            Receiving account\n                            </Typography>\n                                                        <FormControl\n                                                            variant=\"outlined\"\n                                                            className={classes.formControl}\n                                                        >\n                                                            <Select\n                                                                value={this.state.receivingAccount}\n                                                                onChange={this.handleChange}\n                                                                input={\n                                                                    <OutlinedInput\n                                                                        labelWidth={this.state.labelWidth}\n                                                                        name=\"receivingAccount\"\n                                                                    />\n                                                                }\n                                                            >\n                                                                <MenuItem value=\"\">\n                                                                    <em></em>\n                                                                </MenuItem>\n                                                                <MenuItem value={\"0297 00988200918\"}>\n                                                                    First account\n                                </MenuItem>\n                                                                <MenuItem value={\"0235 00235233332\"}>\n                                                                    Second account\n                                </MenuItem>\n                                                                <MenuItem value={\"1256 00864222212\"}>\n                                                                    Third account\n                                </MenuItem>\n                                                            </Select>\n                                                        </FormControl>\n                                                    </div>\n                                                </div>\n                                            </Paper>\n                                        </div>\n                                    )}\n                                    {activeStep === 2 && (\n                                        <div className={classes.bigContainer}>\n                                            <Paper className={classes.paper}>\n                                                <div className={classes.topInfo}>\n                                                    <div>\n                                                        <Typography\n                                                            variant=\"subtitle1\"\n                                                            style={{ fontWeight: \"bold\" }}\n                                                            gutterBottom\n                                                        >\n                                                            Details\n                            </Typography>\n                                                        <Typography variant=\"body1\" gutterBottom>\n                                                            We need some details about any information\n                            </Typography>\n                                                    </div>\n                                                    <div>\n                                                        <Button\n                                                            variant=\"outlined\"\n                                                            size=\"large\"\n                                                            className={classes.outlinedButtom}\n                                                        >\n                                                            Edit\n                            </Button>\n                                                    </div>\n                                                </div>\n                                                <div className={classes.borderColumn}>\n                                                    <Grid\n                                                        item\n                                                        container\n                                                        xs={12}\n                                                        style={{ marginBottom: 32 }}\n                                                    >\n                                                        <Grid item xs={6}>\n                                                            <Typography\n                                                                style={{ textTransform: \"uppercase\" }}\n                                                                color=\"secondary\"\n                                                                gutterBottom\n                                                            >\n                                                                Amount\n                              </Typography>\n                                                            <Typography variant=\"h5\" gutterBottom>\n                                                                {parsed\n                                                                    ? numeral(parsed.amount).format()\n                                                                    : \"75,000\"}{\" \"}\n                                DKK\n                              </Typography>\n                                                        </Grid>\n                                                        <Grid item xs={6}>\n                                                            <Typography\n                                                                style={{ textTransform: \"uppercase\" }}\n                                                                color=\"secondary\"\n                                                                gutterBottom\n                                                            >\n                                                                Total fees\n                              </Typography>\n                                                            <Typography variant=\"h5\" gutterBottom>\n                                                                0 DKK\n                              </Typography>\n                                                        </Grid>\n                                                    </Grid>\n                                                    <Grid item container xs={12}>\n                                                        <Grid item xs={6}>\n                                                            <Typography\n                                                                style={{ textTransform: \"uppercase\" }}\n                                                                color=\"secondary\"\n                                                                gutterBottom\n                                                            >\n                                                                Total price\n                              </Typography>\n                                                            <Typography variant=\"h5\" gutterBottom>\n                                                                {parsed\n                                                                    ? numeral(parsed.interest).format()\n                                                                    : \"6,600\"}{\" \"}\n                                USD\n                              </Typography>\n                                                        </Grid>\n                                                        <Grid item xs={6}>\n                                                            <Typography\n                                                                style={{ textTransform: \"uppercase\" }}\n                                                                color=\"secondary\"\n                                                                gutterBottom\n                                                            >\n                                                                Total cost\n                              </Typography>\n                                                            <Typography variant=\"h5\" gutterBottom>\n                                                                {parsed\n                                                                    ? numeral(parsed.cost).format()\n                                                                    : \"81,600\"}{\" \"}\n                                USD\n                              </Typography>\n                                                        </Grid>\n                                                    </Grid>\n                                                </div>\n                                                <Grid item container xs={12}>\n                                                    <Grid\n                                                        item\n                                                        container\n                                                        xs={12}\n                                                        style={{ marginBottom: 32 }}\n                                                    >\n                                                        <Grid item xs={6}>\n                                                            <Typography\n                                                                style={{ textTransform: \"uppercase\" }}\n                                                                color=\"secondary\"\n                                                                gutterBottom\n                                                            >\n                                                                How often\n                              </Typography>\n                                                            <Typography variant=\"h5\" gutterBottom>\n                                                                Once a month\n                              </Typography>\n                                                        </Grid>\n                                                    </Grid>\n                                                    <Grid item xs={6}>\n                                                        <Typography\n                                                            style={{ textTransform: \"uppercase\" }}\n                                                            color=\"secondary\"\n                                                            gutterBottom\n                                                        >\n                                                            When to start\n                            </Typography>\n                                                        <Typography variant=\"h5\" gutterBottom>\n                                                            01 February 2019\n                            </Typography>\n                                                    </Grid>\n                                                    <Grid item xs={6}>\n                                                        <Typography\n                                                            style={{ textTransform: \"uppercase\" }}\n                                                            color=\"secondary\"\n                                                            gutterBottom\n                                                        >\n                                                            When it ends?\n                            </Typography>\n                                                        <Typography variant=\"h5\" gutterBottom>\n                                                            01 May 2019\n                            </Typography>\n                                                    </Grid>\n                                                </Grid>\n                                                <Grid item container xs={12} style={{ marginTop: 24 }}>\n                                                    <Grid item xs={6}>\n                                                        <Typography\n                                                            style={{\n                                                                textTransform: \"uppercase\",\n                                                                marginBottom: 20\n                                                            }}\n                                                            color=\"secondary\"\n                                                            gutterBottom\n                                                        >\n                                                            Destination account\n                            </Typography>\n                                                        <FormControl\n                                                            variant=\"outlined\"\n                                                            className={classes.formControl}\n                                                        >\n                                                            <Select\n                                                                value={this.state.repaimentAccount}\n                                                                onChange={this.handleChange}\n                                                                input={\n                                                                    <OutlinedInput\n                                                                        labelWidth={this.state.labelWidth}\n                                                                        name=\"repaimentAccount\"\n                                                                    />\n                                                                }\n                                                            >\n                                                                <MenuItem value=\"\">\n                                                                    <em></em>\n                                                                </MenuItem>\n                                                                <MenuItem value={\"0297 00988200918\"}>\n                                                                    Account one\n                                </MenuItem>\n                                                                <MenuItem value={\"0235 00235233332\"}>\n                                                                    Account two\n                                </MenuItem>\n                                                                <MenuItem value={\"1256 00864222212\"}>\n                                                                    Other account\n                                </MenuItem>\n                                                            </Select>\n                                                        </FormControl>\n                                                    </Grid>\n                                                </Grid>\n                                            </Paper>\n                                        </div>\n                                    )}\n                                    {activeStep === 3 && (\n                                        <div className={classes.bigContainer}>\n                                            <Paper className={classes.paper}>\n                                                <div style={{ marginBottom: 24 }}>\n                                                    <Typography\n                                                        variant=\"subtitle1\"\n                                                        style={{ fontWeight: \"bold\" }}\n                                                        gutterBottom\n                                                    >\n                                                        Terms & Conditions\n                          </Typography>\n                                                    <Typography variant=\"body1\" gutterBottom>\n                                                        Please read through and accept the terms &\n                                                        conditions\n                          </Typography>\n                                                </div>\n                                                <div\n                                                    style={{\n                                                        height: 330,\n                                                        padding: 16,\n                                                        border: \"2px solid #ccc\",\n                                                        borderRadius: \"3px\",\n                                                        overflowY: \"scroll\"\n                                                    }}\n                                                >\n                                                    <Typography\n                                                        variant=\"subtitle1\"\n                                                        style={{ fontWeight: \"bold\" }}\n                                                        gutterBottom\n                                                    >\n                                                        1. Your agreement\n                          </Typography>\n                                                    <Typography variant=\"body1\" gutterBottom>\n                                                        By using this Site, you agree to be bound by, and to\n                                                        comply with, these Terms and Conditions. If you do\n                                                        not agree to these Terms and Conditions, please do\n                                                        not use this site. PLEASE NOTE: We reserve the\n                                                        right, at our sole discretion, to change, modify or\n                                                        otherwise alter these Terms and Conditions at any\n                                                        time. Unless otherwise indicated, amendments will\n                                                        become effective immediately. Please review these\n                                                        Terms and Conditions periodically. Your continued\n                                                        use of the Site following the posting of changes\n                                                        and/or modifications will constitute your acceptance\n                                                        of the revised Terms and Conditions and the\n                                                        reasonableness of these standards for notice of\n                                                        changes. For your information, this page was last\n                                                        updated as of the date at the top of these terms and\n                                                        conditions.\n                          </Typography>\n                                                    <Typography\n                                                        variant=\"subtitle1\"\n                                                        style={{ fontWeight: \"bold\" }}\n                                                        gutterBottom\n                                                    >\n                                                        2. Privacy\n                          </Typography>\n                                                    <Typography variant=\"body1\" gutterBottom>\n                                                        Please review our Privacy Policy, which also governs\n                                                        your visit to this Site, to understand our\n                                                        practices. By using this Site, you agree to be bound\n                                                        by, and to comply with, these Terms and Conditions.\n                                                        If you do not agree to these Terms and Conditions,\n                                                        please do not use this site. PLEASE NOTE: We reserve\n                                                        the right, at our sole discretion, to change, modify\n                                                        or otherwise alter these Terms and Conditions at any\n                                                        time. Unless otherwise indicated, amendments will\n                                                        become effective immediately. Please review these\n                                                        Terms and Conditions periodically. Your continued\n                                                        use of the Site following the posting of changes\n                                                        and/or modifications will constitute your acceptance\n                                                        of the revised Terms and Conditions and the\n                                                        reasonableness of these standards for notice of\n                                                        changes. For your information, this page was last\n                                                        updated as of the date at the top of these terms and\n                                                        conditions.\n                          </Typography>\n                                                </div>\n                                                <FormGroup row>\n                                                    <FormControlLabel\n                                                        control={\n                                                            <Checkbox\n                                                                checked={this.state.termsChecked}\n                                                                onChange={this.handleTerms}\n                                                                value=\"check\"\n                                                            />\n                                                        }\n                                                        label=\"I have read and understood the terms & conditions\"\n                                                    />\n                                                </FormGroup>\n                                            </Paper>\n                                        </div>\n                                    )}\n                                    {activeStep === 4 && (\n                                        <div className={classes.smallContainer}>\n                                            <Paper className={classes.paper}>\n                                                <Grid item container xs={12}>\n                                                    <Grid item xs={12}>\n                                                        <Typography\n                                                            variant=\"subtitle1\"\n                                                            style={{ fontWeight: \"bold\" }}\n                                                            gutterBottom\n                                                        >\n                                                            Sign & confirm\n                            </Typography>\n                                                        <Typography variant=\"body1\" gutterBottom>\n                                                            Sign and confirm your agreement\n                            </Typography>\n                                                    </Grid>\n                                                </Grid>\n                                            </Paper>\n                                        </div>\n                                    )}\n                                    {(activeStep === 5 || activeStep === 6) && (\n                                        <div className={classes.smallContainer}>\n                                            <Paper className={classes.paper}>\n                                                <Grid item container xs={12}>\n                                                    <Grid item xs={12}>\n                                                        <Typography variant=\"subtitle1\" gutterBottom>\n                                                            Congratulations{\" \"}\n                                                            <span role=\"img\" aria-label=\"conrats emoji\">\n                                                                🎉\n                              </span>\n                                                        </Typography>\n                                                        <Typography variant=\"body1\" gutterBottom>\n                                                            We have now a positive response\n                            </Typography>\n                                                        <Button fullWidth variant=\"outlined\">\n                                                            Download the service invoice or whatever\n                            </Button>\n                                                    </Grid>\n                                                </Grid>\n                                            </Paper>\n                                        </div>\n                                    )}\n                                    <div className={classes.flexBar}>\n                                        {activeStep !== 5 && (\n                                            <Button\n                                                disabled={activeStep === 0}\n                                                onClick={this.handleBack}\n                                                className={classes.backButton}\n                                                size=\"large\"\n                                            >\n                                                Back\n                                            </Button>\n                                        )}\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"primary\"\n                                            onClick={\n                                                activeStep !== 5 ? this.handleNext : this.goToDashboard\n                                            }\n                                            size=\"large\"\n                                            disabled={\n                                                this.state.activeStep === 3 && !this.state.termsChecked\n                                            }\n                                        >\n                                            {this.stepActions()}\n                                        </Button>\n                                    </div>\n                                </div>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default withRouter(withStyles(styles)(UserDetails));\n"]},"metadata":{},"sourceType":"module"}