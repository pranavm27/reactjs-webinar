{"ast":null,"code":"var _jsxFileName = \"/home/pranav/sn-agencies/backup/sn-agencies/material-sense/src/components/Dashboard.js\";\nimport React, { Component } from \"react\";\nimport withStyles from \"@material-ui/styles/withStyles\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Slider from \"@material-ui/core/Slider\";\nimport Button from \"@material-ui/core/Button\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport SimpleLineChart from \"./SimpleLineChart\";\nimport Months from \"./common/Months\";\nimport VerifiedUserIcon from \"@material-ui/icons/VerifiedUser\";\nimport Loading from \"./common/Loading\";\nimport Topbar from \"./Topbar\";\n\nconst numeral = require(\"numeral\");\n\nnumeral.defaultFormat(\"0,000\");\n\nconst backgroundShape = require(\"../images/shape.svg\");\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.grey[\"100\"],\n    overflow: \"hidden\",\n    background: \"url(\".concat(backgroundShape, \") no-repeat\"),\n    backgroundSize: \"cover\",\n    backgroundPosition: \"0 400px\",\n    paddingBottom: 200\n  },\n  grid: {\n    width: 1200,\n    margin: \"0 \".concat(theme.spacing(2), \"px\"),\n    [theme.breakpoints.down(\"sm\")]: {\n      width: \"calc(100% - 20px)\"\n    }\n  },\n  loadingState: {\n    opacity: 0.05\n  },\n  paper: {\n    padding: theme.spacing(3),\n    margin: theme.spacing(2),\n    textAlign: \"left\",\n    color: theme.palette.text.secondary\n  },\n  rangeLabel: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    paddingTop: theme.spacing(2)\n  },\n  topBar: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\"\n  },\n  outlinedButtom: {\n    textTransform: \"uppercase\",\n    margin: theme.spacing(1)\n  },\n  actionButtom: {\n    textTransform: \"uppercase\",\n    margin: theme.spacing(1),\n    width: 152,\n    height: 36\n  },\n  blockCenter: {\n    padding: theme.spacing(2),\n    textAlign: \"center\"\n  },\n  block: {\n    padding: theme.spacing(2)\n  },\n  loanAvatar: {\n    display: \"inline-block\",\n    verticalAlign: \"center\",\n    width: 16,\n    height: 16,\n    marginRight: 10,\n    marginBottom: -2,\n    color: theme.palette.primary.contrastText,\n    backgroundColor: theme.palette.primary.main\n  },\n  interestAvatar: {\n    display: \"inline-block\",\n    verticalAlign: \"center\",\n    width: 16,\n    height: 16,\n    marginRight: 10,\n    marginBottom: -2,\n    color: theme.palette.primary.contrastText,\n    backgroundColor: theme.palette.primary.light\n  },\n  inlining: {\n    display: \"inline-block\",\n    marginRight: 10\n  },\n  buttonBar: {\n    display: \"flex\"\n  },\n  noBorder: {\n    borderBottomStyle: \"hidden\"\n  },\n  mainBadge: {\n    textAlign: \"center\",\n    marginTop: theme.spacing(4),\n    marginBottom: theme.spacing(4)\n  }\n});\n\nconst monthRange = Months;\n\nclass Dashboard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true,\n      amount: 15000,\n      period: 3,\n      start: 0,\n      monthlyInterest: 0,\n      totalInterest: 0,\n      monthlyPayment: 0,\n      totalPayment: 0,\n      data: []\n    };\n\n    this.handleChangeAmount = (event, value) => {\n      this.setState({\n        amount: value,\n        loading: false\n      });\n      this.updateValues();\n    };\n\n    this.handleChangePeriod = (event, value) => {\n      this.setState({\n        period: value,\n        loading: false\n      });\n      this.updateValues();\n    };\n\n    this.handleChangeStart = (event, value) => {\n      this.setState({\n        start: value,\n        loading: false\n      });\n      this.updateValues();\n    };\n  }\n\n  updateValues() {\n    const _this$state = this.state,\n          amount = _this$state.amount,\n          period = _this$state.period,\n          start = _this$state.start;\n    const monthlyInterest = amount * Math.pow(0.01 * 1.01, period) / Math.pow(0.01, period - 1);\n    const totalInterest = monthlyInterest * (period + start);\n    const totalPayment = amount + totalInterest;\n    const monthlyPayment = period > start ? totalPayment / (period - start) : totalPayment / period;\n    const data = Array.from({\n      length: period + start\n    }, (value, i) => {\n      const delayed = i < start;\n      return {\n        name: monthRange[i],\n        Type: delayed ? 0 : Math.ceil(monthlyPayment).toFixed(0),\n        OtherType: Math.ceil(monthlyInterest).toFixed(0)\n      };\n    });\n    this.setState({\n      monthlyInterest,\n      totalInterest,\n      totalPayment,\n      monthlyPayment,\n      data\n    });\n  }\n\n  componentDidMount() {\n    this.updateValues();\n  }\n\n  render() {\n    const classes = this.props.classes;\n    const _this$state2 = this.state,\n          amount = _this$state2.amount,\n          period = _this$state2.period,\n          start = _this$state2.start,\n          monthlyPayment = _this$state2.monthlyPayment,\n          monthlyInterest = _this$state2.monthlyInterest,\n          data = _this$state2.data,\n          loading = _this$state2.loading;\n    const currentPath = this.props.location.pathname;\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CssBaseline, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Topbar, {\n      currentPath: currentPath,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      spacing: 10,\n      alignItems: \"center\",\n      justify: \"center\",\n      container: true,\n      className: classes.grid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.topBar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.block,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 21\n      }\n    }, \"Dashboard\"), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 21\n      }\n    }, \"Adjust and play with our sliders.\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"outlined\",\n      className: classes.outlinedButtom,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 21\n      }\n    }, \"Get help\")))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      className: classes.paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"subtitle1\",\n      gutterBottom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 21\n      }\n    }, \"How much you want to transfer\"), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 21\n      }\n    }, \"Use slider to set the amount you need.\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.blockCenter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      color: \"secondary\",\n      variant: \"h6\",\n      gutterBottom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 23\n      }\n    }, numeral(amount).format(), \" USD\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Slider, {\n      value: amount,\n      min: 20000,\n      max: 150000,\n      step: 15000,\n      onChange: this.handleChangeAmount,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.rangeLabel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"subtitle2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 25\n      }\n    }, \"15,000 USD\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"subtitle2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 25\n      }\n    }, \"150,000 USD\")))))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      className: classes.paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"subtitle1\",\n      gutterBottom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 21\n      }\n    }, \"Period\"), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 21\n      }\n    }, \"A sample period\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.blockCenter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      color: \"secondary\",\n      variant: \"h6\",\n      gutterBottom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 23\n      }\n    }, period, \" months\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Slider, {\n      value: period,\n      min: 1,\n      max: 6,\n      step: 1,\n      onChange: this.handleChangePeriod,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.rangeLabel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"subtitle2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 25\n      }\n    }, \"1 month\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"subtitle2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 25\n      }\n    }, \"6 months\")))))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      className: classes.paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"subtitle1\",\n      gutterBottom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 21\n      }\n    }, \"Start date\"), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 21\n      }\n    }, \"Set your preferred start date.\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.blockCenter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      color: \"secondary\",\n      variant: \"h6\",\n      gutterBottom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 23\n      }\n    }, monthRange[start])), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Slider, {\n      value: start,\n      min: 0,\n      max: 5,\n      step: 1,\n      onChange: this.handleChangeStart,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.rangeLabel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"subtitle2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 25\n      }\n    }, \"Dec 2018\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"subtitle2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 25\n      }\n    }, \"May 2019\")))))), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 4,\n      justify: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      md: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      className: classes.paper,\n      style: {\n        position: \"relative\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Loading, {\n      loading: loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: loading ? classes.loadingState : \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"subtitle1\",\n      gutterBottom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 23\n      }\n    }, \"Some details\"), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 23\n      }\n    }, \"Details about the graph\"), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginTop: 14,\n        marginBottom: 14\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.inlining,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Avatar, {\n      className: classes.loanAvatar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(Typography, {\n      className: classes.inlining,\n      variant: \"subtitle2\",\n      gutterBottom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 27\n      }\n    }, \"Type\"), /*#__PURE__*/React.createElement(Typography, {\n      className: classes.inlining,\n      color: \"secondary\",\n      variant: \"h6\",\n      gutterBottom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 27\n      }\n    }, numeral(monthlyPayment).format(), \" units\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.inlining,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Avatar, {\n      className: classes.interestAvatar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(Typography, {\n      className: classes.inlining,\n      variant: \"subtitle2\",\n      gutterBottom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 27\n      }\n    }, \"Othe type\"), /*#__PURE__*/React.createElement(Typography, {\n      className: classes.inlining,\n      color: \"secondary\",\n      variant: \"h6\",\n      gutterBottom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 27\n      }\n    }, numeral(monthlyInterest).format(), \" units\"))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(SimpleLineChart, {\n      data: data,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 25\n      }\n    }))))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      className: classes.paper,\n      style: {\n        position: \"relative\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Loading, {\n      loading: loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: loading ? classes.loadingState : \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"subtitle1\",\n      gutterBottom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 23\n      }\n    }, \"State\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.mainBadge,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(VerifiedUserIcon, {\n      style: {\n        fontSize: 72\n      },\n      fontSize: \"large\",\n      color: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h5\",\n      color: \"secondary\",\n      gutterBottom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 25\n      }\n    }, \"Verified\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.buttonBar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      to: {\n        pathname: \"/dashboard\",\n        search: \"?type=save\"\n      },\n      component: Link,\n      variant: \"outlined\",\n      className: classes.actionButtom,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 25\n      }\n    }, \"Save\"), /*#__PURE__*/React.createElement(Button, {\n      to: {\n        pathname: \"/dashboard\",\n        search: \"?type=apply\"\n      },\n      component: Link,\n      color: \"primary\",\n      variant: \"contained\",\n      className: classes.actionButtom,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 25\n      }\n    }, \"Apply\"))))))))));\n  }\n\n}\n\nexport default withRouter(withStyles(styles)(Dashboard));","map":{"version":3,"sources":["/home/pranav/sn-agencies/backup/sn-agencies/material-sense/src/components/Dashboard.js"],"names":["React","Component","withStyles","withRouter","Link","CssBaseline","Paper","Typography","Grid","Slider","Button","Avatar","SimpleLineChart","Months","VerifiedUserIcon","Loading","Topbar","numeral","require","defaultFormat","backgroundShape","styles","theme","root","flexGrow","backgroundColor","palette","grey","overflow","background","backgroundSize","backgroundPosition","paddingBottom","grid","width","margin","spacing","breakpoints","down","loadingState","opacity","paper","padding","textAlign","color","text","secondary","rangeLabel","display","justifyContent","paddingTop","topBar","alignItems","outlinedButtom","textTransform","actionButtom","height","blockCenter","block","loanAvatar","verticalAlign","marginRight","marginBottom","primary","contrastText","main","interestAvatar","light","inlining","buttonBar","noBorder","borderBottomStyle","mainBadge","marginTop","monthRange","Dashboard","state","loading","amount","period","start","monthlyInterest","totalInterest","monthlyPayment","totalPayment","data","handleChangeAmount","event","value","setState","updateValues","handleChangePeriod","handleChangeStart","Math","pow","Array","from","length","i","delayed","name","Type","ceil","toFixed","OtherType","componentDidMount","render","classes","props","currentPath","location","pathname","format","position","fontSize","search"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport withStyles from \"@material-ui/styles/withStyles\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Slider from \"@material-ui/core/Slider\";\nimport Button from \"@material-ui/core/Button\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport SimpleLineChart from \"./SimpleLineChart\";\nimport Months from \"./common/Months\";\nimport VerifiedUserIcon from \"@material-ui/icons/VerifiedUser\";\nimport Loading from \"./common/Loading\";\n\nimport Topbar from \"./Topbar\";\n\nconst numeral = require(\"numeral\");\nnumeral.defaultFormat(\"0,000\");\n\nconst backgroundShape = require(\"../images/shape.svg\");\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.grey[\"100\"],\n    overflow: \"hidden\",\n    background: `url(${backgroundShape}) no-repeat`,\n    backgroundSize: \"cover\",\n    backgroundPosition: \"0 400px\",\n    paddingBottom: 200\n  },\n  grid: {\n    width: 1200,\n    margin: `0 ${theme.spacing(2)}px`,\n    [theme.breakpoints.down(\"sm\")]: {\n      width: \"calc(100% - 20px)\"\n    }\n  },\n  loadingState: {\n    opacity: 0.05\n  },\n  paper: {\n    padding: theme.spacing(3),\n    margin: theme.spacing(2),\n    textAlign: \"left\",\n    color: theme.palette.text.secondary\n  },\n  rangeLabel: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    paddingTop: theme.spacing(2)\n  },\n  topBar: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\"\n  },\n  outlinedButtom: {\n    textTransform: \"uppercase\",\n    margin: theme.spacing(1)\n  },\n  actionButtom: {\n    textTransform: \"uppercase\",\n    margin: theme.spacing(1),\n    width: 152,\n    height: 36\n  },\n  blockCenter: {\n    padding: theme.spacing(2),\n    textAlign: \"center\"\n  },\n  block: {\n    padding: theme.spacing(2)\n  },\n  loanAvatar: {\n    display: \"inline-block\",\n    verticalAlign: \"center\",\n    width: 16,\n    height: 16,\n    marginRight: 10,\n    marginBottom: -2,\n    color: theme.palette.primary.contrastText,\n    backgroundColor: theme.palette.primary.main\n  },\n  interestAvatar: {\n    display: \"inline-block\",\n    verticalAlign: \"center\",\n    width: 16,\n    height: 16,\n    marginRight: 10,\n    marginBottom: -2,\n    color: theme.palette.primary.contrastText,\n    backgroundColor: theme.palette.primary.light\n  },\n  inlining: {\n    display: \"inline-block\",\n    marginRight: 10\n  },\n  buttonBar: {\n    display: \"flex\"\n  },\n  noBorder: {\n    borderBottomStyle: \"hidden\"\n  },\n  mainBadge: {\n    textAlign: \"center\",\n    marginTop: theme.spacing(4),\n    marginBottom: theme.spacing(4)\n  }\n});\n\nconst monthRange = Months;\n\nclass Dashboard extends Component {\n  state = {\n    loading: true,\n    amount: 15000,\n    period: 3,\n    start: 0,\n    monthlyInterest: 0,\n    totalInterest: 0,\n    monthlyPayment: 0,\n    totalPayment: 0,\n    data: []\n  };\n\n  updateValues() {\n    const { amount, period, start } = this.state;\n    const monthlyInterest =\n      (amount * Math.pow(0.01 * 1.01, period)) / Math.pow(0.01, period - 1);\n    const totalInterest = monthlyInterest * (period + start);\n    const totalPayment = amount + totalInterest;\n    const monthlyPayment =\n      period > start ? totalPayment / (period - start) : totalPayment / period;\n\n    const data = Array.from({ length: period + start }, (value, i) => {\n      const delayed = i < start;\n      return {\n        name: monthRange[i],\n        Type: delayed ? 0 : Math.ceil(monthlyPayment).toFixed(0),\n        OtherType: Math.ceil(monthlyInterest).toFixed(0)\n      };\n    });\n\n    this.setState({\n      monthlyInterest,\n      totalInterest,\n      totalPayment,\n      monthlyPayment,\n      data\n    });\n  }\n\n  componentDidMount() {\n    this.updateValues();\n  }\n\n  handleChangeAmount = (event, value) => {\n    this.setState({ amount: value, loading: false });\n    this.updateValues();\n  };\n\n  handleChangePeriod = (event, value) => {\n    this.setState({ period: value, loading: false });\n    this.updateValues();\n  };\n\n  handleChangeStart = (event, value) => {\n    this.setState({ start: value, loading: false });\n    this.updateValues();\n  };\n\n  render() {\n    const { classes } = this.props;\n    const {\n      amount,\n      period,\n      start,\n      monthlyPayment,\n      monthlyInterest,\n      data,\n      loading\n    } = this.state;\n    const currentPath = this.props.location.pathname;\n\n    return (\n      <React.Fragment>\n        <CssBaseline />\n        <Topbar currentPath={currentPath} />\n        <div className={classes.root}>\n          <Grid container justify=\"center\">\n            <Grid\n              spacing={10}\n              alignItems=\"center\"\n              justify=\"center\"\n              container\n              className={classes.grid}\n            >\n              <Grid item xs={12}>\n                <div className={classes.topBar}>\n                  <div className={classes.block}>\n                    <Typography variant=\"h6\" gutterBottom>\n                      Dashboard\n                    </Typography>\n                    <Typography variant=\"body1\">\n                      Adjust and play with our sliders.\n                    </Typography>\n                  </div>\n                  <div>\n                    <Button\n                      variant=\"outlined\"\n                      className={classes.outlinedButtom}\n                    >\n                      Get help\n                    </Button>\n                  </div>\n                </div>\n              </Grid>\n              <Grid item xs={12} md={4}>\n                <Paper className={classes.paper}>\n                  <div>\n                    <Typography variant=\"subtitle1\" gutterBottom>\n                      How much you want to transfer\n                    </Typography>\n                    <Typography variant=\"body1\">\n                      Use slider to set the amount you need.\n                    </Typography>\n                    <div className={classes.blockCenter}>\n                      <Typography color=\"secondary\" variant=\"h6\" gutterBottom>\n                        {numeral(amount).format()} USD\n                      </Typography>\n                    </div>\n                    <div>\n                      <Slider\n                        value={amount}\n                        min={20000}\n                        max={150000}\n                        step={15000}\n                        onChange={this.handleChangeAmount}\n                      />\n                    </div>\n                    <div className={classes.rangeLabel}>\n                      <div>\n                        <Typography variant=\"subtitle2\">15,000 USD</Typography>\n                      </div>\n                      <div>\n                        <Typography variant=\"subtitle2\">150,000 USD</Typography>\n                      </div>\n                    </div>\n                  </div>\n                </Paper>\n              </Grid>\n              <Grid item xs={12} md={4}>\n                <Paper className={classes.paper}>\n                  <div>\n                    <Typography variant=\"subtitle1\" gutterBottom>\n                      Period\n                    </Typography>\n                    <Typography variant=\"body1\">A sample period</Typography>\n                    <div className={classes.blockCenter}>\n                      <Typography color=\"secondary\" variant=\"h6\" gutterBottom>\n                        {period} months\n                      </Typography>\n                    </div>\n                    <div>\n                      <Slider\n                        value={period}\n                        min={1}\n                        max={6}\n                        step={1}\n                        onChange={this.handleChangePeriod}\n                      />\n                    </div>\n                    <div className={classes.rangeLabel}>\n                      <div>\n                        <Typography variant=\"subtitle2\">1 month</Typography>\n                      </div>\n                      <div>\n                        <Typography variant=\"subtitle2\">6 months</Typography>\n                      </div>\n                    </div>\n                  </div>\n                </Paper>\n              </Grid>\n              <Grid item xs={12} md={4}>\n                <Paper className={classes.paper}>\n                  <div>\n                    <Typography variant=\"subtitle1\" gutterBottom>\n                      Start date\n                    </Typography>\n                    <Typography variant=\"body1\">\n                      Set your preferred start date.\n                    </Typography>\n                    <div className={classes.blockCenter}>\n                      <Typography color=\"secondary\" variant=\"h6\" gutterBottom>\n                        {monthRange[start]}\n                      </Typography>\n                    </div>\n                    <div>\n                      <Slider\n                        value={start}\n                        min={0}\n                        max={5}\n                        step={1}\n                        onChange={this.handleChangeStart}\n                      />\n                    </div>\n                    <div className={classes.rangeLabel}>\n                      <div>\n                        <Typography variant=\"subtitle2\">Dec 2018</Typography>\n                      </div>\n                      <div>\n                        <Typography variant=\"subtitle2\">May 2019</Typography>\n                      </div>\n                    </div>\n                  </div>\n                </Paper>\n              </Grid>\n              <Grid container spacing={4} justify=\"center\">\n                <Grid item xs={12} md={8}>\n                  <Paper\n                    className={classes.paper}\n                    style={{ position: \"relative\" }}\n                  >\n                    <Loading loading={loading} />\n                    <div className={loading ? classes.loadingState : \"\"}>\n                      <Typography variant=\"subtitle1\" gutterBottom>\n                        Some details\n                      </Typography>\n                      <Typography variant=\"body1\">\n                        Details about the graph\n                      </Typography>\n                      <div style={{ marginTop: 14, marginBottom: 14 }}>\n                        <div className={classes.inlining}>\n                          <Avatar className={classes.loanAvatar}></Avatar>\n                          <Typography\n                            className={classes.inlining}\n                            variant=\"subtitle2\"\n                            gutterBottom\n                          >\n                            Type\n                          </Typography>\n                          <Typography\n                            className={classes.inlining}\n                            color=\"secondary\"\n                            variant=\"h6\"\n                            gutterBottom\n                          >\n                            {numeral(monthlyPayment).format()} units\n                          </Typography>\n                        </div>\n                        <div className={classes.inlining}>\n                          <Avatar className={classes.interestAvatar}></Avatar>\n                          <Typography\n                            className={classes.inlining}\n                            variant=\"subtitle2\"\n                            gutterBottom\n                          >\n                            Othe type\n                          </Typography>\n                          <Typography\n                            className={classes.inlining}\n                            color=\"secondary\"\n                            variant=\"h6\"\n                            gutterBottom\n                          >\n                            {numeral(monthlyInterest).format()} units\n                          </Typography>\n                        </div>\n                      </div>\n                      <div>\n                        <SimpleLineChart data={data} />\n                      </div>\n                    </div>\n                  </Paper>\n                </Grid>\n                <Grid item xs={12} md={4}>\n                  <Paper\n                    className={classes.paper}\n                    style={{ position: \"relative\" }}\n                  >\n                    <Loading loading={loading} />\n                    <div className={loading ? classes.loadingState : \"\"}>\n                      <Typography variant=\"subtitle1\" gutterBottom>\n                        State\n                      </Typography>\n                      <div className={classes.mainBadge}>\n                        <VerifiedUserIcon\n                          style={{ fontSize: 72 }}\n                          fontSize={\"large\"}\n                          color={\"secondary\"}\n                        />\n                        <Typography\n                          variant=\"h5\"\n                          color={\"secondary\"}\n                          gutterBottom\n                        >\n                          Verified\n                        </Typography>\n                      </div>\n                      <div className={classes.buttonBar}>\n                        <Button\n                          to={{ pathname: \"/dashboard\", search: `?type=save` }}\n                          component={Link}\n                          variant=\"outlined\"\n                          className={classes.actionButtom}\n                        >\n                          Save\n                        </Button>\n                        <Button\n                          to={{ pathname: \"/dashboard\", search: `?type=apply` }}\n                          component={Link}\n                          color=\"primary\"\n                          variant=\"contained\"\n                          className={classes.actionButtom}\n                        >\n                          Apply\n                        </Button>\n                      </div>\n                    </div>\n                  </Paper>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withRouter(withStyles(styles)(Dashboard));\n"]},"metadata":{},"sourceType":"module"}