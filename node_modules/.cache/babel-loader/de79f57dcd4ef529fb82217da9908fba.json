{"ast":null,"code":"var _jsxFileName = \"/home/pranav/sn-agencies/backup/sn-agencies/material-sense/src/components/NewChitty.js\";\nimport React, { Component } from \"react\";\nimport withStyles from \"@material-ui/styles/withStyles\";\nimport { withRouter } from \"react-router-dom\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport { Config } from \"./common/Config\";\nimport AuthHandler from \"./common/AuthHandler\";\nimport TextField from '@material-ui/core/TextField';\nimport AccountBalanceWalletIcon from '@material-ui/icons/AccountBalanceWallet';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DoneIcon from '@material-ui/icons/Done';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Back from \"./common/Back\";\nimport Moment from 'react-moment';\nimport Timeline from '@material-ui/lab/Timeline';\nimport TimelineItem from '@material-ui/lab/TimelineItem';\nimport TimelineSeparator from '@material-ui/lab/TimelineSeparator';\nimport TimelineConnector from '@material-ui/lab/TimelineConnector';\nimport TimelineContent from '@material-ui/lab/TimelineContent';\nimport TimelineOppositeContent from '@material-ui/lab/TimelineOppositeContent';\nimport TimelineDot from '@material-ui/lab/TimelineDot';\n\nconst qs = require(\"query-string\");\n\nconst backgroundShape = require(\"../images/shape.svg\");\n\nconst numeral = require(\"numeral\");\n\nnumeral.defaultFormat(\"0,000\");\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.primary[\"A100\"],\n    overflow: \"hidden\",\n    // background: `url(${backgroundShape}) no-repeat`,\n    backgroundSize: \"cover\",\n    backgroundPosition: \"0 400px\",\n    marginTop: 10,\n    padding: 5,\n    paddingBottom: 2\n  },\n  grid: {\n    margin: \"0 \".concat(theme.spacing(2), \"px\")\n  },\n  smallContainer: {\n    width: \"60%\"\n  },\n  bigContainer: {\n    width: \"80%\"\n  },\n  stepContainer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  stepGrid: {\n    width: \"80%\"\n  },\n  backButton: {\n    marginRight: theme.spacing(1)\n  },\n  outlinedButtom: {\n    textTransform: \"uppercase\",\n    margin: theme.spacing(1)\n  },\n  stepper: {\n    backgroundColor: \"transparent\"\n  },\n  paper: {\n    padding: theme.spacing(3),\n    textAlign: \"left\",\n    color: theme.palette.text.secondary\n  },\n  topInfo: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    marginBottom: 42\n  },\n  formControl: {\n    width: \"100%\"\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  },\n  borderColumn: {\n    borderBottom: \"1px solid \".concat(theme.palette.grey[\"100\"]),\n    paddingBottom: 24,\n    marginBottom: 24\n  },\n  flexBar: {\n    marginTop: 32,\n    display: \"flex\",\n    justifyContent: \"center\"\n  }\n});\n\nclass NewChitty extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      activeStep: 0,\n      receivingAccount: \"Home Account\",\n      repaimentAccount: \"Saving Account\",\n      termsChecked: false,\n      amount: 1500,\n      payment: [],\n      payment_methord: 'cash',\n      labelWidth: 0\n    };\n\n    this.savePayment = () => {\n      let apiURI = ''; // apiURI = Config.API.BASE_URL + Config.API.GET_PAYMENTS + this.props.location.data.userId +'/' + this.props.location.data.subscriptionId;\n\n      apiURI = Config.API.BASE_URL + Config.API.GET_PAYMENTS;\n      console.log(this.props.location);\n      let userId = this.props.location.data.userId;\n      let subscriptionId = this.props.location.data.subscriptionId;\n      let authHandler = new AuthHandler();\n      let isAuthenticated = authHandler.isAuthenticated();\n      let params = {\n        userId: userId,\n        subscriptionId: subscriptionId,\n        amount_authorized: this.state.amount,\n        payment_method: this.state.payment_methord\n      };\n      this.setState({\n        loader: true\n      });\n      fetch(apiURI, {\n        method: \"POST\",\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": \"Bearer \" + isAuthenticated,\n          \"cache-control\": \"no-cache\"\n        },\n        body: JSON.stringify(params)\n      }).then(response => {\n        response.json().then(responseJson => {\n          if (response.status === 401) {\n            this.props.history.push(\"/login\");\n          }\n\n          if (!responseJson.error === null) {\n            throw responseJson;\n          }\n\n          this.setState({\n            payment: responseJson.data.payments\n          });\n          this.getPayments();\n          this.setState({\n            loader: false\n          });\n        }).catch(Err => {\n          if (response.status === 401) {\n            this.props.history.push(\"/login\");\n          }\n\n          this.setState({\n            displayErrors: true\n          });\n          this.setState({\n            loader: false\n          });\n        });\n      });\n    };\n\n    this.goToDashboard = event => {\n      const queryString = this.props.location.search;\n      this.props.history.push({\n        pathname: \"/\",\n        search: queryString\n      });\n    };\n\n    this.generate = element => {\n      return [0, 1, 2].map(value => React.cloneElement(element, {\n        key: value\n      }));\n    };\n\n    this.onChange = evt => {\n      this.setState({\n        amount: evt.target.value\n      });\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        payment_methord: event.target.value\n      });\n    };\n  }\n\n  componentDidMount() {// this.getPayments()\n  }\n\n  componentWillMount() {// this.getPayments()\n  }\n\n  render() {\n    const classes = this.props.classes;\n    const userData = this.props.location.data;\n    const currencies = [{\n      label: 'SN-1500',\n      value: 'SN-1500'\n    }];\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CssBaseline, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      spacing: 1,\n      alignItems: \"center\",\n      justify: \"center\",\n      container: true,\n      className: classes.grid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Back, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: classes.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(CardContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      htmlFor: \"input-with-icon-adornment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 49\n      }\n    }, \"Add New Chitty\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      value: this.state.amount,\n      onChange: this.onChange,\n      id: \"standard-basic\",\n      label: \"Standard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      id: \"standard-select-currency\",\n      select: true,\n      label: \"\",\n      value: this.state.payment_methord,\n      onChange: this.handleChange,\n      helperText: \"Please select your payment methord\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 49\n      }\n    }, currencies.map(option => /*#__PURE__*/React.createElement(MenuItem, {\n      key: option.value,\n      value: option.value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 57\n      }\n    }, option.label)))), /*#__PURE__*/React.createElement(CardActions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: this.savePayment,\n      size: \"small\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 49\n      }\n    }, \" Add Chitty\"))))))))));\n  }\n\n}\n\nexport default withRouter(withStyles(styles)(NewChitty));","map":{"version":3,"sources":["/home/pranav/sn-agencies/backup/sn-agencies/material-sense/src/components/NewChitty.js"],"names":["React","Component","withStyles","withRouter","CssBaseline","Typography","Grid","Paper","Button","Card","CardActions","CardContent","Config","AuthHandler","TextField","AccountBalanceWalletIcon","InputLabel","Input","InputAdornment","MenuItem","List","ListItem","ListItemAvatar","ListItemIcon","ListItemText","DoneIcon","DeleteIcon","Back","Moment","Timeline","TimelineItem","TimelineSeparator","TimelineConnector","TimelineContent","TimelineOppositeContent","TimelineDot","qs","require","backgroundShape","numeral","defaultFormat","styles","theme","root","flexGrow","backgroundColor","palette","primary","overflow","backgroundSize","backgroundPosition","marginTop","padding","paddingBottom","grid","margin","spacing","smallContainer","width","bigContainer","stepContainer","display","flexDirection","alignItems","stepGrid","backButton","marginRight","outlinedButtom","textTransform","stepper","paper","textAlign","color","text","secondary","topInfo","justifyContent","marginBottom","formControl","selectEmpty","borderColumn","borderBottom","grey","flexBar","NewChitty","state","activeStep","receivingAccount","repaimentAccount","termsChecked","amount","payment","payment_methord","labelWidth","savePayment","apiURI","API","BASE_URL","GET_PAYMENTS","console","log","props","location","userId","data","subscriptionId","authHandler","isAuthenticated","params","amount_authorized","payment_method","setState","loader","fetch","method","headers","body","JSON","stringify","then","response","json","responseJson","status","history","push","error","payments","getPayments","catch","Err","displayErrors","goToDashboard","event","queryString","search","pathname","generate","element","map","value","cloneElement","key","onChange","evt","target","handleChange","componentDidMount","componentWillMount","render","classes","userData","currencies","label","option"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,gCAAvB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AAEA,OAAOC,SAAP,MAAsB,6BAAtB;AAEA,OAAOC,wBAAP,MAAqC,yCAArC;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AAEA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AAEA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAGA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,iBAAP,MAA8B,oCAA9B;AACA,OAAOC,iBAAP,MAA8B,oCAA9B;AACA,OAAOC,eAAP,MAA4B,kCAA5B;AACA,OAAOC,uBAAP,MAAoC,0CAApC;AACA,OAAOC,WAAP,MAAwB,8BAAxB;;AAEA,MAAMC,EAAE,GAAGC,OAAO,CAAC,cAAD,CAAlB;;AACA,MAAMC,eAAe,GAAGD,OAAO,CAAC,qBAAD,CAA/B;;AAEA,MAAME,OAAO,GAAGF,OAAO,CAAC,SAAD,CAAvB;;AACAE,OAAO,CAACC,aAAR,CAAsB,OAAtB;;AAEA,MAAMC,MAAM,GAAGC,KAAK,KAAK;AACrBC,EAAAA,IAAI,EAAE;AACFC,IAAAA,QAAQ,EAAE,CADR;AAEFC,IAAAA,eAAe,EAAEH,KAAK,CAACI,OAAN,CAAcC,OAAd,CAAsB,MAAtB,CAFf;AAGFC,IAAAA,QAAQ,EAAE,QAHR;AAIF;AACAC,IAAAA,cAAc,EAAE,OALd;AAMFC,IAAAA,kBAAkB,EAAE,SANlB;AAOFC,IAAAA,SAAS,EAAE,EAPT;AAQFC,IAAAA,OAAO,EAAE,CARP;AASFC,IAAAA,aAAa,EAAE;AATb,GADe;AAYrBC,EAAAA,IAAI,EAAE;AACFC,IAAAA,MAAM,cAAOb,KAAK,CAACc,OAAN,CAAc,CAAd,CAAP;AADJ,GAZe;AAerBC,EAAAA,cAAc,EAAE;AACZC,IAAAA,KAAK,EAAE;AADK,GAfK;AAkBrBC,EAAAA,YAAY,EAAE;AACVD,IAAAA,KAAK,EAAE;AADG,GAlBO;AAqBrBE,EAAAA,aAAa,EAAE;AACXC,IAAAA,OAAO,EAAE,MADE;AAEXC,IAAAA,aAAa,EAAE,QAFJ;AAGXC,IAAAA,UAAU,EAAE;AAHD,GArBM;AA0BrBC,EAAAA,QAAQ,EAAE;AACNN,IAAAA,KAAK,EAAE;AADD,GA1BW;AA6BrBO,EAAAA,UAAU,EAAE;AACRC,IAAAA,WAAW,EAAExB,KAAK,CAACc,OAAN,CAAc,CAAd;AADL,GA7BS;AAgCrBW,EAAAA,cAAc,EAAE;AACZC,IAAAA,aAAa,EAAE,WADH;AAEZb,IAAAA,MAAM,EAAEb,KAAK,CAACc,OAAN,CAAc,CAAd;AAFI,GAhCK;AAoCrBa,EAAAA,OAAO,EAAE;AACLxB,IAAAA,eAAe,EAAE;AADZ,GApCY;AAuCrByB,EAAAA,KAAK,EAAE;AACHlB,IAAAA,OAAO,EAAEV,KAAK,CAACc,OAAN,CAAc,CAAd,CADN;AAEHe,IAAAA,SAAS,EAAE,MAFR;AAGHC,IAAAA,KAAK,EAAE9B,KAAK,CAACI,OAAN,CAAc2B,IAAd,CAAmBC;AAHvB,GAvCc;AA4CrBC,EAAAA,OAAO,EAAE;AACLd,IAAAA,OAAO,EAAE,MADJ;AAELe,IAAAA,cAAc,EAAE,eAFX;AAGLb,IAAAA,UAAU,EAAE,QAHP;AAILc,IAAAA,YAAY,EAAE;AAJT,GA5CY;AAkDrBC,EAAAA,WAAW,EAAE;AACTpB,IAAAA,KAAK,EAAE;AADE,GAlDQ;AAqDrBqB,EAAAA,WAAW,EAAE;AACT5B,IAAAA,SAAS,EAAET,KAAK,CAACc,OAAN,CAAc,CAAd;AADF,GArDQ;AAwDrBwB,EAAAA,YAAY,EAAE;AACVC,IAAAA,YAAY,sBAAevC,KAAK,CAACI,OAAN,CAAcoC,IAAd,CAAmB,KAAnB,CAAf,CADF;AAEV7B,IAAAA,aAAa,EAAE,EAFL;AAGVwB,IAAAA,YAAY,EAAE;AAHJ,GAxDO;AA6DrBM,EAAAA,OAAO,EAAE;AACLhC,IAAAA,SAAS,EAAE,EADN;AAELU,IAAAA,OAAO,EAAE,MAFJ;AAGLe,IAAAA,cAAc,EAAE;AAHX;AA7DY,CAAL,CAApB;;AAqEA,MAAMQ,SAAN,SAAwBnF,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAC9BoF,KAD8B,GACtB;AACJC,MAAAA,UAAU,EAAE,CADR;AAEJC,MAAAA,gBAAgB,EAAE,cAFd;AAGJC,MAAAA,gBAAgB,EAAE,gBAHd;AAIJC,MAAAA,YAAY,EAAE,KAJV;AAKJC,MAAAA,MAAM,EAAE,IALJ;AAMJC,MAAAA,OAAO,EAAE,EANL;AAOJC,MAAAA,eAAe,EAAE,MAPb;AAQJC,MAAAA,UAAU,EAAE;AARR,KADsB;;AAAA,SAuB9BC,WAvB8B,GAuBhB,MAAM;AAChB,UAAIC,MAAM,GAAG,EAAb,CADgB,CAGhB;;AACAA,MAAAA,MAAM,GAAGnF,MAAM,CAACoF,GAAP,CAAWC,QAAX,GAAsBrF,MAAM,CAACoF,GAAP,CAAWE,YAA1C;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,QAAvB;AACA,UAAIC,MAAM,GAAG,KAAKF,KAAL,CAAWC,QAAX,CAAoBE,IAApB,CAAyBD,MAAtC;AACA,UAAIE,cAAc,GAAG,KAAKJ,KAAL,CAAWC,QAAX,CAAoBE,IAApB,CAAyBC,cAA9C;AACA,UAAIC,WAAW,GAAG,IAAI7F,WAAJ,EAAlB;AACA,UAAI8F,eAAe,GAAGD,WAAW,CAACC,eAAZ,EAAtB;AAEA,UAAIC,MAAM,GAAG;AACTL,QAAAA,MAAM,EAAEA,MADC;AAETE,QAAAA,cAAc,EAAEA,cAFP;AAGTI,QAAAA,iBAAiB,EAAE,KAAKxB,KAAL,CAAWK,MAHrB;AAIToB,QAAAA,cAAc,EAAE,KAAKzB,KAAL,CAAWO;AAJlB,OAAb;AAMA,WAAKmB,QAAL,CAAc;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAd;AACAC,MAAAA,KAAK,CAAClB,MAAD,EAAS;AACVmB,QAAAA,MAAM,EAAE,MADE;AAEVC,QAAAA,OAAO,EAAE;AACL,yCAA+B,GAD1B;AAEL,0BAAgB,kBAFX;AAGL,2BAAiB,YAAYR,eAHxB;AAIL,2BAAiB;AAJZ,SAFC;AAQVS,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeV,MAAf;AARI,OAAT,CAAL,CASGW,IATH,CASQC,QAAQ,IAAI;AAChBA,QAAAA,QAAQ,CAACC,IAAT,GACKF,IADL,CACUG,YAAY,IAAI;AAElB,cAAIF,QAAQ,CAACG,MAAT,KAAoB,GAAxB,EAA6B;AACzB,iBAAKtB,KAAL,CAAWuB,OAAX,CAAmBC,IAAnB,CAAwB,QAAxB;AACH;;AACD,cAAI,CAACH,YAAY,CAACI,KAAd,KAAwB,IAA5B,EAAkC;AAC9B,kBAAMJ,YAAN;AACH;;AACD,eAAKX,QAAL,CAAc;AAAEpB,YAAAA,OAAO,EAAE+B,YAAY,CAAClB,IAAb,CAAkBuB;AAA7B,WAAd;AACA,eAAKC,WAAL;AAEA,eAAKjB,QAAL,CAAc;AAAEC,YAAAA,MAAM,EAAE;AAAV,WAAd;AACH,SAbL,EAcKiB,KAdL,CAcWC,GAAG,IAAI;AACV,cAAIV,QAAQ,CAACG,MAAT,KAAoB,GAAxB,EAA6B;AACzB,iBAAKtB,KAAL,CAAWuB,OAAX,CAAmBC,IAAnB,CAAwB,QAAxB;AACH;;AACD,eAAKd,QAAL,CAAc;AAAEoB,YAAAA,aAAa,EAAE;AAAjB,WAAd;AACA,eAAKpB,QAAL,CAAc;AAAEC,YAAAA,MAAM,EAAE;AAAV,WAAd;AACH,SApBL;AAqBH,OA/BD;AAiCH,KA3E6B;;AAAA,SA6E9BoB,aA7E8B,GA6EdC,KAAK,IAAI;AACrB,YAAMC,WAAW,GAAG,KAAKjC,KAAL,CAAWC,QAAX,CAAoBiC,MAAxC;AAEA,WAAKlC,KAAL,CAAWuB,OAAX,CAAmBC,IAAnB,CAAwB;AACpBW,QAAAA,QAAQ,EAAE,GADU;AAEpBD,QAAAA,MAAM,EAAED;AAFY,OAAxB;AAIH,KApF6B;;AAAA,SAsF9BG,QAtF8B,GAsFlBC,OAAD,IAAa;AACpB,aAAO,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAUC,GAAV,CAAeC,KAAD,IACjB5I,KAAK,CAAC6I,YAAN,CAAmBH,OAAnB,EAA4B;AACxBI,QAAAA,GAAG,EAAEF;AADmB,OAA5B,CADG,CAAP;AAKH,KA5F6B;;AAAA,SA8F9BG,QA9F8B,GA8FlBC,GAAD,IAAS;AAChB,WAAKjC,QAAL,CAAc;AAAErB,QAAAA,MAAM,EAAEsD,GAAG,CAACC,MAAJ,CAAWL;AAArB,OAAd;AACH,KAhG6B;;AAAA,SAkG9BM,YAlG8B,GAkGdb,KAAD,IAAW;AACtB,WAAKtB,QAAL,CAAc;AAAEnB,QAAAA,eAAe,EAAEyC,KAAK,CAACY,MAAN,CAAaL;AAAhC,OAAd;AAEH,KArG6B;AAAA;;AAY9BO,EAAAA,iBAAiB,GAAG,CAChB;AACH;;AAGDC,EAAAA,kBAAkB,GAAG,CACjB;AACH;;AAoFDC,EAAAA,MAAM,GAAG;AAAA,UACGC,OADH,GACe,KAAKjD,KADpB,CACGiD,OADH;AAEL,UAAMC,QAAQ,GAAG,KAAKlD,KAAL,CAAWC,QAAX,CAAoBE,IAArC;AAGA,UAAMgD,UAAU,GAAG,CACf;AACIC,MAAAA,KAAK,EAAE,SADX;AAEIb,MAAAA,KAAK,EAAE;AAFX,KADe,CAAnB;AAOA,wBACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAK,MAAA,SAAS,EAAEU,OAAO,CAAC3G,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAC,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AACI,MAAA,OAAO,EAAE,CADb;AAEI,MAAA,UAAU,EAAC,QAFf;AAGI,MAAA,OAAO,EAAC,QAHZ;AAII,MAAA,SAAS,MAJb;AAKI,MAAA,SAAS,EAAE2G,OAAO,CAAChG,IALvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAOI,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAEgG,OAAO,CAAC3G,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,2BAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,eAKI,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAE,KAAK0C,KAAL,CAAWK,MAA7B;AAAqC,MAAA,QAAQ,EAAE,KAAKqD,QAApD;AAA8D,MAAA,EAAE,EAAC,gBAAjE;AAAkF,MAAA,KAAK,EAAC,UAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARJ,eASI,oBAAC,SAAD;AACI,MAAA,EAAE,EAAC,0BADP;AAEI,MAAA,MAAM,MAFV;AAGI,MAAA,KAAK,EAAC,EAHV;AAII,MAAA,KAAK,EAAE,KAAK1D,KAAL,CAAWO,eAJtB;AAKI,MAAA,QAAQ,EAAE,KAAKsD,YALnB;AAMI,MAAA,UAAU,EAAC,oCANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQKM,UAAU,CAACb,GAAX,CAAgBe,MAAD,iBACZ,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,MAAM,CAACd,KAAtB;AAA6B,MAAA,KAAK,EAAEc,MAAM,CAACd,KAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKc,MAAM,CAACD,KADZ,CADH,CARL,CATJ,CADJ,eAyBI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAK3D,WAAtB;AAAmC,MAAA,IAAI,EAAC,OAAxC;AAAgD,MAAA,KAAK,EAAC,SAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,CAzBJ,CADJ,CADJ,CAFJ,CAPJ,CADJ,CADJ,CAFJ,CADJ;AAqDH;;AAxK6B;;AA2KlC,eAAe3F,UAAU,CAACD,UAAU,CAACuC,MAAD,CAAV,CAAmB2C,SAAnB,CAAD,CAAzB","sourcesContent":["import React, { Component } from \"react\";\nimport withStyles from \"@material-ui/styles/withStyles\";\nimport { withRouter } from \"react-router-dom\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport { Config } from \"./common/Config\";\nimport AuthHandler from \"./common/AuthHandler\";\n\nimport TextField from '@material-ui/core/TextField';\n\nimport AccountBalanceWalletIcon from '@material-ui/icons/AccountBalanceWallet';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport DoneIcon from '@material-ui/icons/Done';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Back from \"./common/Back\";\nimport Moment from 'react-moment';\n\n\nimport Timeline from '@material-ui/lab/Timeline';\nimport TimelineItem from '@material-ui/lab/TimelineItem';\nimport TimelineSeparator from '@material-ui/lab/TimelineSeparator';\nimport TimelineConnector from '@material-ui/lab/TimelineConnector';\nimport TimelineContent from '@material-ui/lab/TimelineContent';\nimport TimelineOppositeContent from '@material-ui/lab/TimelineOppositeContent';\nimport TimelineDot from '@material-ui/lab/TimelineDot';\n\nconst qs = require(\"query-string\");\nconst backgroundShape = require(\"../images/shape.svg\");\n\nconst numeral = require(\"numeral\");\nnumeral.defaultFormat(\"0,000\");\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n        backgroundColor: theme.palette.primary[\"A100\"],\n        overflow: \"hidden\",\n        // background: `url(${backgroundShape}) no-repeat`,\n        backgroundSize: \"cover\",\n        backgroundPosition: \"0 400px\",\n        marginTop: 10,\n        padding: 5,\n        paddingBottom: 2\n    },\n    grid: {\n        margin: `0 ${theme.spacing(2)}px`\n    },\n    smallContainer: {\n        width: \"60%\"\n    },\n    bigContainer: {\n        width: \"80%\"\n    },\n    stepContainer: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n    },\n    stepGrid: {\n        width: \"80%\"\n    },\n    backButton: {\n        marginRight: theme.spacing(1)\n    },\n    outlinedButtom: {\n        textTransform: \"uppercase\",\n        margin: theme.spacing(1)\n    },\n    stepper: {\n        backgroundColor: \"transparent\"\n    },\n    paper: {\n        padding: theme.spacing(3),\n        textAlign: \"left\",\n        color: theme.palette.text.secondary\n    },\n    topInfo: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        marginBottom: 42\n    },\n    formControl: {\n        width: \"100%\"\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2)\n    },\n    borderColumn: {\n        borderBottom: `1px solid ${theme.palette.grey[\"100\"]}`,\n        paddingBottom: 24,\n        marginBottom: 24\n    },\n    flexBar: {\n        marginTop: 32,\n        display: \"flex\",\n        justifyContent: \"center\"\n    }\n});\n\n\nclass NewChitty extends Component {\n    state = {\n        activeStep: 0,\n        receivingAccount: \"Home Account\",\n        repaimentAccount: \"Saving Account\",\n        termsChecked: false,\n        amount: 1500,\n        payment: [],\n        payment_methord: 'cash',\n        labelWidth: 0\n    };\n\n    componentDidMount() {\n        // this.getPayments()\n    }\n\n\n    componentWillMount() {\n        // this.getPayments()\n    }\n\n\n\n    savePayment = () => {\n        let apiURI = '';\n\n        // apiURI = Config.API.BASE_URL + Config.API.GET_PAYMENTS + this.props.location.data.userId +'/' + this.props.location.data.subscriptionId;\n        apiURI = Config.API.BASE_URL + Config.API.GET_PAYMENTS;\n\n        console.log(this.props.location)\n        let userId = this.props.location.data.userId\n        let subscriptionId = this.props.location.data.subscriptionId\n        let authHandler = new AuthHandler();\n        let isAuthenticated = authHandler.isAuthenticated();\n\n        let params = {\n            userId: userId,\n            subscriptionId: subscriptionId,\n            amount_authorized: this.state.amount,\n            payment_method: this.state.payment_methord\n        }\n        this.setState({ loader: true });\n        fetch(apiURI, {\n            method: \"POST\",\n            headers: {\n                \"Access-Control-Allow-Origin\": \"*\",\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": \"Bearer \" + isAuthenticated,\n                \"cache-control\": \"no-cache\"\n            },\n            body: JSON.stringify(params),\n        }).then(response => {\n            response.json()\n                .then(responseJson => {\n\n                    if (response.status === 401) {\n                        this.props.history.push(\"/login\");\n                    }\n                    if (!responseJson.error === null) {\n                        throw responseJson;\n                    }\n                    this.setState({ payment: responseJson.data.payments });\n                    this.getPayments();\n\n                    this.setState({ loader: false });\n                })\n                .catch(Err => {\n                    if (response.status === 401) {\n                        this.props.history.push(\"/login\");\n                    }\n                    this.setState({ displayErrors: true });\n                    this.setState({ loader: false });\n                })\n        }\n        );\n    }\n\n    goToDashboard = event => {\n        const queryString = this.props.location.search;\n\n        this.props.history.push({\n            pathname: \"/\",\n            search: queryString\n        });\n    };\n\n    generate = (element) => {\n        return [0, 1, 2].map((value) =>\n            React.cloneElement(element, {\n                key: value,\n            }),\n        );\n    }\n\n    onChange = (evt) => {\n        this.setState({ amount: evt.target.value })\n    }\n\n    handleChange = (event) => {\n        this.setState({ payment_methord: event.target.value })\n\n    };\n\n    render() {\n        const { classes } = this.props;\n        const userData = this.props.location.data;\n\n\n        const currencies = [\n            {\n                label: 'SN-1500',\n                value: 'SN-1500',\n            }\n        ];\n\n        return (\n            <React.Fragment>\n                <CssBaseline />\n                <div className={classes.root}>\n                    <Grid container justify=\"center\">\n                        <Grid\n                            spacing={1}\n                            alignItems=\"center\"\n                            justify=\"center\"\n                            container\n                            className={classes.grid}\n                        >\n                            <Grid item xs={12}>\n                                <Back />\n                                <div >\n                                    <div >\n                                        <Card className={classes.root}>\n                                            <CardContent>\n\n                                                <InputLabel htmlFor=\"input-with-icon-adornment\">Add New Chitty</InputLabel>\n                                                <br />\n\n                                                <TextField value={this.state.amount} onChange={this.onChange} id=\"standard-basic\" label=\"Standard\" />\n\n                                                <br />\n                                                <br />\n                                                <TextField\n                                                    id=\"standard-select-currency\"\n                                                    select\n                                                    label=\"\"\n                                                    value={this.state.payment_methord}\n                                                    onChange={this.handleChange}\n                                                    helperText=\"Please select your payment methord\"\n                                                >\n                                                    {currencies.map((option) => (\n                                                        <MenuItem key={option.value} value={option.value}>\n                                                            {option.label}\n                                                        </MenuItem>\n                                                    ))}\n                                                </TextField>\n                                            </CardContent>\n                                            <CardActions>\n                                                <Button onClick={this.savePayment} size=\"small\" color='primary'> Add Chitty</Button>\n                                            </CardActions>\n                                        </Card>\n                                    </div>\n                                </div>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default withRouter(withStyles(styles)(NewChitty));\n"]},"metadata":{},"sourceType":"module"}