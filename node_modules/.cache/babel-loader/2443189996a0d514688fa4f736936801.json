{"ast":null,"code":"import _slicedToArray from \"/home/pranav/sn-agencies/material-sense/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/pranav/sn-agencies/material-sense/src/components/addUser.js\";\nimport React, { Component } from \"react\";\nimport withStyles from \"@material-ui/styles/withStyles\";\nimport { withRouter } from \"react-router-dom\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport { Config } from \"./common/Config\";\nimport AuthHandler from \"./common/AuthHandler\";\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport { MuiPickersUtilsProvider, KeyboardTimePicker, KeyboardDatePicker } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport TextField from '@material-ui/core/TextField';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DoneIcon from '@material-ui/icons/Done';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Back from \"./common/Back\";\n\nconst qs = require(\"query-string\");\n\nconst backgroundShape = require(\"../images/shape.svg\");\n\nconst numeral = require(\"numeral\");\n\nnumeral.defaultFormat(\"0,000\");\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.primary[\"A100\"],\n    overflow: \"hidden\",\n    // background: `url(${backgroundShape}) no-repeat`,\n    backgroundSize: \"cover\",\n    backgroundPosition: \"0 400px\",\n    marginTop: 10,\n    padding: 20,\n    paddingBottom: 2\n  },\n  grid: {\n    margin: \"0 \".concat(theme.spacing(2), \"px\")\n  },\n  smallContainer: {\n    width: \"60%\"\n  },\n  bigContainer: {\n    width: \"80%\"\n  },\n  stepContainer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  stepGrid: {\n    width: \"80%\"\n  },\n  backButton: {\n    marginRight: theme.spacing(1)\n  },\n  outlinedButtom: {\n    textTransform: \"uppercase\",\n    margin: theme.spacing(1)\n  },\n  stepper: {\n    backgroundColor: \"transparent\"\n  },\n  paper: {\n    padding: theme.spacing(3),\n    textAlign: \"left\",\n    color: theme.palette.text.secondary\n  },\n  topInfo: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    marginBottom: 42\n  },\n  formControl: {\n    width: \"100%\"\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  },\n  borderColumn: {\n    borderBottom: \"1px solid \".concat(theme.palette.grey[\"100\"]),\n    paddingBottom: 24,\n    marginBottom: 24\n  },\n  input: {\n    display: 'none'\n  },\n  flexBar: {\n    marginTop: 32,\n    display: \"flex\",\n    justifyContent: \"center\"\n  }\n});\n\nclass AddUser extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      activeStep: 0,\n      receivingAccount: \"Home Account\",\n      repaimentAccount: \"Saving Account\",\n      termsChecked: false,\n      labelWidth: 0,\n      selectedDate: new Date(),\n      setSelectedDate: ''\n    };\n\n    this.getPayments = () => {\n      // this.checkIsUserLoggedIn();\n      let apiURI = '';\n      apiURI = Config.API.BASE_URL + Config.API.GET_PAYMENTS + this.props.data;\n      let authHandler = new AuthHandler();\n      let isAuthenticated = authHandler.isAuthenticated(); // this.getOrderCount(apiURI)\n\n      this.setState({\n        loader: true\n      });\n      fetch(apiURI, {\n        method: \"GET\",\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": \"Bearer \" + isAuthenticated,\n          \"cache-control\": \"no-cache\"\n        }\n      }).then(response => {\n        response.json().then(responseJson => {\n          if (response.status === 401) {\n            this.props.history.push(\"/login\");\n          }\n\n          if (!responseJson.error === null) {\n            throw responseJson;\n          }\n\n          console.log(responseJson.data);\n          this.setState({\n            data: responseJson.data\n          });\n          this.setState({\n            _meta: responseJson._meta\n          });\n          this.setState({\n            loader: false\n          });\n        }).catch(Err => {\n          if (response.status === 401) {\n            this.props.history.push(\"/login\");\n          }\n\n          this.setState({\n            displayErrors: true\n          });\n          this.setState({\n            loader: false\n          });\n        });\n      });\n    };\n\n    this.handleDateChange = date => {\n      this.setState({\n        selectedDate: date\n      });\n    };\n\n    this.createUser = () => {\n      let apiURI = Config.API.BASE_URL + Config.API.CREATE_CLIENT;\n      let authHandler = new AuthHandler();\n      let isAuthenticated = authHandler.isAuthenticated();\n      this.setState({\n        loader: true\n      });\n      let dob = new Date(this.state.dateOfBirth);\n      let month = \"0\".concat(dob.getMonth() + 1).slice(-2);\n      let userDateOfBirth = \"\".concat(dob.getFullYear(), \"-\").concat(month, \"-\").concat(dob.getDate());\n      fetch(apiURI, {\n        method: \"POST\",\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": \"Bearer \" + isAuthenticated,\n          \"cache-control\": \"no-cache\"\n        },\n        body: JSON.stringify({\n          email: this.state.email,\n          firstName: this.state.firstName,\n          lastName: this.state.lastName,\n          mobileNumber: this.state.mobileNumber,\n          dob: userDateOfBirth,\n          status: Number(this.state.status),\n          accessLevel: Number(this.state.accessLevel)\n        })\n      }).then(response => response.json().then(responseJson => {\n        if (response.status === 401) {\n          this.props.history.push(\"/login\");\n        }\n\n        if (responseJson.error) {\n          throw responseJson.error;\n        }\n\n        this.setState({\n          loader: false\n        });\n        this.setState({\n          message: responseJson.data.message\n        });\n        this.setState({\n          alert: true\n        });\n        this.setState({\n          modal: true\n        });\n\n        if (this.props.createOrder === true) {\n          this.goToCreateOrderPage(responseJson.data.userId);\n        }\n      }).catch(Err => {\n        if (response.status === 401) {\n          this.props.history.push(\"/login\");\n        }\n\n        this.setState({\n          message: Err.message\n        });\n        this.setState({\n          loader: false\n        });\n        this.setState({\n          modal: true\n        });\n        this.setState({\n          error: true\n        });\n      }));\n    };\n\n    this.goToDashboard = event => {\n      const queryString = this.props.location.search;\n      this.props.history.push({\n        pathname: \"/\",\n        search: queryString\n      });\n    };\n\n    this.generate = element => {\n      return [0, 1, 2].map(value => React.cloneElement(element, {\n        key: value\n      }));\n    };\n  }\n\n  componentDidMount() {}\n\n  componentWillMount() {\n    this.getPayments();\n  }\n\n  render() {\n    const classes = this.props.classes;\n    const userData = this.props.location.data;\n\n    const _React$useState = React.useState(new Date('2014-08-18T21:11:54')),\n          _React$useState2 = _slicedToArray(_React$useState, 2),\n          selectedDate = _React$useState2[0],\n          setSelectedDate = _React$useState2[1];\n\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CssBaseline, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Back, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Card, {\n      className: classes.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(CardContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h6\",\n      component: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 37\n      }\n    }, \"Add Coustomer\"), /*#__PURE__*/React.createElement(TextField, {\n      fullWidth: true,\n      margin: \"normal\",\n      id: \"standard-basic\",\n      label: \"First Name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      fullWidth: true,\n      margin: \"normal\",\n      id: \"standard-basic\",\n      label: \"Last Name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      fullWidth: true,\n      margin: \"normal\",\n      id: \"standard-basic\",\n      label: \"E-mail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      fullWidth: true,\n      margin: \"normal\",\n      id: \"standard-basic\",\n      label: \"Address\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(InputLabel, {\n      id: \"label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 37\n      }\n    }, \"Plan\"), /*#__PURE__*/React.createElement(Select, {\n      labelId: \"label\",\n      id: \"select\",\n      value: \"20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(MenuItem, {\n      value: \"10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 41\n      }\n    }, \"SN - 1500X25 \")), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      accept: \"image/*\",\n      className: classes.input,\n      id: \"contained-button-file\",\n      multiple: true,\n      type: \"file\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"contained-button-file\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      component: \"span\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 41\n      }\n    }, \"Take Photo\")), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      accept: \"image/*\",\n      className: classes.input,\n      id: \"contained-button-file\",\n      multiple: true,\n      type: \"file\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"contained-button-file\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      component: \"span\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(PhotoCamera, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 45\n      }\n    }), \" Id Frond\")), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(MuiPickersUtilsProvider, {\n      utils: DateFnsUtils,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      justify: \"space-around\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(KeyboardDatePicker, {\n      disableToolbar: true,\n      variant: \"inline\",\n      format: \"MM/dd/yyyy\",\n      margin: \"normal\",\n      id: \"date-picker-inline\",\n      label: \"Date picker inline\",\n      value: selectedDate,\n      onChange: this.handleDateChange,\n      KeyboardButtonProps: {\n        'aria-label': 'change date'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 45\n      }\n    }))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      accept: \"image/*\",\n      className: classes.input,\n      id: \"contained-button-file\",\n      multiple: true,\n      type: \"file\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"contained-button-file\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      component: \"span\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(PhotoCamera, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 45\n      }\n    }), \" ID Back\"))), /*#__PURE__*/React.createElement(CardActions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      size: \"small\",\n      color: \"primary\",\n      onClick: this.createUser,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 37\n      }\n    }, \" Add User\")))))));\n  }\n\n}\n\nexport default withRouter(withStyles(styles)(AddUser));","map":{"version":3,"sources":["/home/pranav/sn-agencies/material-sense/src/components/addUser.js"],"names":["React","Component","withStyles","withRouter","CssBaseline","Typography","Grid","Paper","Button","Card","CardActions","CardContent","Config","AuthHandler","PhotoCamera","InputLabel","MenuItem","FormHelperText","FormControl","Select","MuiPickersUtilsProvider","KeyboardTimePicker","KeyboardDatePicker","DateFnsUtils","TextField","ListItem","ListItemAvatar","ListItemIcon","ListItemText","DoneIcon","DeleteIcon","Back","qs","require","backgroundShape","numeral","defaultFormat","styles","theme","root","flexGrow","backgroundColor","palette","primary","overflow","backgroundSize","backgroundPosition","marginTop","padding","paddingBottom","grid","margin","spacing","smallContainer","width","bigContainer","stepContainer","display","flexDirection","alignItems","stepGrid","backButton","marginRight","outlinedButtom","textTransform","stepper","paper","textAlign","color","text","secondary","topInfo","justifyContent","marginBottom","formControl","selectEmpty","borderColumn","borderBottom","grey","input","flexBar","AddUser","state","activeStep","receivingAccount","repaimentAccount","termsChecked","labelWidth","selectedDate","Date","setSelectedDate","getPayments","apiURI","API","BASE_URL","GET_PAYMENTS","props","data","authHandler","isAuthenticated","setState","loader","fetch","method","headers","then","response","json","responseJson","status","history","push","error","console","log","_meta","catch","Err","displayErrors","handleDateChange","date","createUser","CREATE_CLIENT","dob","dateOfBirth","month","getMonth","slice","userDateOfBirth","getFullYear","getDate","body","JSON","stringify","email","firstName","lastName","mobileNumber","Number","accessLevel","message","alert","modal","createOrder","goToCreateOrderPage","userId","goToDashboard","event","queryString","location","search","pathname","generate","element","map","value","cloneElement","key","componentDidMount","componentWillMount","render","classes","userData","useState"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport withStyles from \"@material-ui/styles/withStyles\";\nimport { withRouter } from \"react-router-dom\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport { Config } from \"./common/Config\";\nimport AuthHandler from \"./common/AuthHandler\";\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardTimePicker,\n    KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\n\nimport TextField from '@material-ui/core/TextField';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport DoneIcon from '@material-ui/icons/Done';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Back from \"./common/Back\";\n\nconst qs = require(\"query-string\");\nconst backgroundShape = require(\"../images/shape.svg\");\n\nconst numeral = require(\"numeral\");\nnumeral.defaultFormat(\"0,000\");\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n        backgroundColor: theme.palette.primary[\"A100\"],\n        overflow: \"hidden\",\n        // background: `url(${backgroundShape}) no-repeat`,\n        backgroundSize: \"cover\",\n        backgroundPosition: \"0 400px\",\n        marginTop: 10,\n        padding: 20,\n        paddingBottom: 2,\n    },\n    grid: {\n        margin: `0 ${theme.spacing(2)}px`\n    },\n    smallContainer: {\n        width: \"60%\"\n    },\n    bigContainer: {\n        width: \"80%\"\n    },\n    stepContainer: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n    },\n    stepGrid: {\n        width: \"80%\"\n    },\n    backButton: {\n        marginRight: theme.spacing(1)\n    },\n    outlinedButtom: {\n        textTransform: \"uppercase\",\n        margin: theme.spacing(1)\n    },\n    stepper: {\n        backgroundColor: \"transparent\"\n    },\n    paper: {\n        padding: theme.spacing(3),\n        textAlign: \"left\",\n        color: theme.palette.text.secondary\n    },\n    topInfo: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        marginBottom: 42\n    },\n    formControl: {\n        width: \"100%\"\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2)\n    },\n    borderColumn: {\n        borderBottom: `1px solid ${theme.palette.grey[\"100\"]}`,\n        paddingBottom: 24,\n        marginBottom: 24\n    },\n    input: {\n        display: 'none',\n    },\n    flexBar: {\n        marginTop: 32,\n        display: \"flex\",\n        justifyContent: \"center\"\n    }\n});\n\n\nclass AddUser extends Component {\n    state = {\n        activeStep: 0,\n        receivingAccount: \"Home Account\",\n        repaimentAccount: \"Saving Account\",\n        termsChecked: false,\n        labelWidth: 0,\n        selectedDate: new Date(),\n        setSelectedDate:''\n    };\n\n    componentDidMount() { }\n\n    componentWillMount() {\n        this.getPayments()\n    }\n\n    getPayments = () => {\n        // this.checkIsUserLoggedIn();\n        let apiURI = '';\n\n        apiURI = Config.API.BASE_URL + Config.API.GET_PAYMENTS + this.props.data;\n\n        let authHandler = new AuthHandler();\n        let isAuthenticated = authHandler.isAuthenticated();\n\n        // this.getOrderCount(apiURI)\n\n        this.setState({ loader: true });\n        fetch(apiURI, {\n            method: \"GET\",\n            headers: {\n                \"Access-Control-Allow-Origin\": \"*\",\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": \"Bearer \" + isAuthenticated,\n                \"cache-control\": \"no-cache\"\n            }\n        }).then(response => {\n            response.json()\n                .then(responseJson => {\n\n                    if (response.status === 401) {\n                        this.props.history.push(\"/login\");\n                    }\n                    if (!responseJson.error === null) {\n                        throw responseJson;\n                    }\n                    console.log(responseJson.data)\n                    this.setState({ data: responseJson.data });\n                    this.setState({ _meta: responseJson._meta });\n                    this.setState({ loader: false });\n                })\n                .catch(Err => {\n                    if (response.status === 401) {\n                        this.props.history.push(\"/login\");\n                    }\n                    this.setState({ displayErrors: true });\n                    this.setState({ loader: false });\n                })\n        }\n        );\n    }\n  \n        handleDateChange = (date) => {\n            this.setState( {selectedDate: date});\n        };\n\n    createUser = () => {\n\n        let apiURI = Config.API.BASE_URL + Config.API.CREATE_CLIENT;\n\n        let authHandler = new AuthHandler();\n        let isAuthenticated = authHandler.isAuthenticated();\n        this.setState({ loader: true });\n\n        let dob = new Date(this.state.dateOfBirth);\n        let month = `0${dob.getMonth() + 1}`.slice(-2);\n        let userDateOfBirth = `${dob.getFullYear()}-${month}-${dob.getDate()}`\n\n        fetch(apiURI, {\n            method: \"POST\",\n            headers: {\n                \"Access-Control-Allow-Origin\": \"*\",\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": \"Bearer \" + isAuthenticated,\n                \"cache-control\": \"no-cache\",\n            },\n            body: JSON.stringify({\n                email: this.state.email,\n                firstName: this.state.firstName,\n                lastName: this.state.lastName,\n                mobileNumber: this.state.mobileNumber,\n                dob: userDateOfBirth,\n                status: Number(this.state.status),\n                accessLevel: Number(this.state.accessLevel),\n            })\n        }).then(response =>\n            response.json()\n                .then(responseJson => {\n\n                    if (response.status === 401) {\n                        this.props.history.push(\"/login\");\n                    }\n                    if (responseJson.error) {\n                        throw responseJson.error;\n                    }\n                    this.setState({ loader: false });\n                    this.setState({ message: responseJson.data.message });\n                    this.setState({ alert: true });\n                    this.setState({ modal: true });\n                    if (this.props.createOrder === true) {\n                        this.goToCreateOrderPage(responseJson.data.userId)\n                    }\n                })\n                .catch(Err => {\n\n                    if (response.status === 401) {\n                        this.props.history.push(\"/login\");\n                    }\n                    this.setState({ message: Err.message });\n                    this.setState({ loader: false });\n                    this.setState({ modal: true });\n                    this.setState({ error: true });\n                })\n        );\n    }\n    goToDashboard = event => {\n        const queryString = this.props.location.search;\n\n        this.props.history.push({\n            pathname: \"/\",\n            search: queryString\n        });\n    };\n\n    generate = (element) => {\n        return [0, 1, 2].map((value) =>\n            React.cloneElement(element, {\n                key: value,\n            }),\n        );\n    }\n    render() {\n        const { classes } = this.props;\n        const userData = this.props.location.data;\n        const [selectedDate, setSelectedDate] = React.useState(new Date('2014-08-18T21:11:54'));\n\n        return (\n            <React.Fragment>\n                <CssBaseline />\n                <div className={classes.root}>\n                    <Grid container justify=\"center\">\n\n                        <Grid item xs={12}>\n                            <Back />\n                            <Card className={classes.root}>\n                                <CardContent>\n                                    <Typography variant=\"h6\" component=\"h6\">\n                                        Add Coustomer\n                                                </Typography>\n\n                                    <TextField fullWidth\n                                        margin=\"normal\" id=\"standard-basic\" label=\"First Name\" />\n                                    <br />\n                                    <TextField fullWidth\n                                        margin=\"normal\" id=\"standard-basic\" label=\"Last Name\" />\n                                    <br />\n                                    <TextField fullWidth\n                                        margin=\"normal\" id=\"standard-basic\" label=\"E-mail\" />\n                                    <br />\n                                    <TextField fullWidth\n                                        margin=\"normal\" id=\"standard-basic\" label=\"Address\" />\n\n                                    <br />\n                                    <br />\n                                    <InputLabel id=\"label\">Plan</InputLabel>\n                                    <Select labelId=\"label\" id=\"select\" value=\"20\">\n                                        <MenuItem value=\"10\">SN - 1500X25 </MenuItem>\n                                    </Select>\n                                    <br />\n                                    <br />\n                                    <input\n                                        accept=\"image/*\"\n                                        className={classes.input}\n                                        id=\"contained-button-file\"\n                                        multiple\n                                        type=\"file\"\n                                    />\n                                    <label htmlFor=\"contained-button-file\">\n                                        <Button variant=\"contained\" color=\"primary\" component=\"span\">\n                                            Take Photo\n        </Button>\n                                    </label>\n                                    <br />\n                                    <br />\n                                    <input\n                                        accept=\"image/*\"\n                                        className={classes.input}\n                                        id=\"contained-button-file\"\n                                        multiple\n                                        type=\"file\"\n                                    />\n                                    <label htmlFor=\"contained-button-file\">\n                                        <Button variant=\"contained\" color=\"primary\" component=\"span\">\n                                            <PhotoCamera /> Id Frond\n        </Button>\n                                    </label>\n                                    <br />\n                                    <br />\n                                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                                        <Grid container justify=\"space-around\">\n                                            <KeyboardDatePicker\n                                                disableToolbar\n                                                variant=\"inline\"\n                                                format=\"MM/dd/yyyy\"\n                                                margin=\"normal\"\n                                                id=\"date-picker-inline\"\n                                                label=\"Date picker inline\"\n                                                value={selectedDate}\n                                                onChange={this.handleDateChange}\n                                                KeyboardButtonProps={{\n                                                    'aria-label': 'change date',\n                                                }}\n                                            />\n                                        </Grid>\n                                    </MuiPickersUtilsProvider>\n                                    <br />\n                                    <br />\n                                    <input\n                                        accept=\"image/*\"\n                                        className={classes.input}\n                                        id=\"contained-button-file\"\n                                        multiple\n                                        type=\"file\"\n                                    />\n                                    <label htmlFor=\"contained-button-file\">\n                                        <Button variant=\"contained\" color=\"primary\" component=\"span\">\n                                            <PhotoCamera /> ID Back\n        </Button>\n                                    </label>\n                                </CardContent>\n                                <CardActions>\n                                    <Button size=\"small\" color='primary' onClick={this.createUser}> Add User</Button>\n                                </CardActions>\n                            </Card>\n\n                        </Grid>\n                    </Grid>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default withRouter(withStyles(styles)(AddUser));\n"]},"metadata":{},"sourceType":"module"}